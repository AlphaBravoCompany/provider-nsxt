/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyGatewayFloodProtectionProfileBindingContextObservation struct {

	// Id of the project which the resource belongs to.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type PolicyGatewayFloodProtectionProfileBindingContextParameters struct {

	// Id of the project which the resource belongs to.
	// +kubebuilder:validation:Required
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`
}

type PolicyGatewayFloodProtectionProfileBindingObservation struct {

	// Resource context
	Context []PolicyGatewayFloodProtectionProfileBindingContextObservation `json:"context,omitempty" tf:"context,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// The path of the parent to be bind with the profile. It could be either Tier0 path, Tier1 path, or locale service path
	ParentPath *string `json:"parentPath,omitempty" tf:"parent_path,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The path of the flood protection profile
	ProfilePath *string `json:"profilePath,omitempty" tf:"profile_path,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyGatewayFloodProtectionProfileBindingTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyGatewayFloodProtectionProfileBindingParameters struct {

	// Resource context
	// +kubebuilder:validation:Optional
	Context []PolicyGatewayFloodProtectionProfileBindingContextParameters `json:"context,omitempty" tf:"context,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// The path of the parent to be bind with the profile. It could be either Tier0 path, Tier1 path, or locale service path
	// +kubebuilder:validation:Optional
	ParentPath *string `json:"parentPath,omitempty" tf:"parent_path,omitempty"`

	// The path of the flood protection profile
	// +kubebuilder:validation:Optional
	ProfilePath *string `json:"profilePath,omitempty" tf:"profile_path,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyGatewayFloodProtectionProfileBindingTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyGatewayFloodProtectionProfileBindingTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyGatewayFloodProtectionProfileBindingTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyGatewayFloodProtectionProfileBindingSpec defines the desired state of PolicyGatewayFloodProtectionProfileBinding
type PolicyGatewayFloodProtectionProfileBindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyGatewayFloodProtectionProfileBindingParameters `json:"forProvider"`
}

// PolicyGatewayFloodProtectionProfileBindingStatus defines the observed state of PolicyGatewayFloodProtectionProfileBinding.
type PolicyGatewayFloodProtectionProfileBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyGatewayFloodProtectionProfileBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyGatewayFloodProtectionProfileBinding is the Schema for the PolicyGatewayFloodProtectionProfileBindings API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyGatewayFloodProtectionProfileBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.parentPath)",message="parentPath is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.profilePath)",message="profilePath is a required parameter"
	Spec   PolicyGatewayFloodProtectionProfileBindingSpec   `json:"spec"`
	Status PolicyGatewayFloodProtectionProfileBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyGatewayFloodProtectionProfileBindingList contains a list of PolicyGatewayFloodProtectionProfileBindings
type PolicyGatewayFloodProtectionProfileBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyGatewayFloodProtectionProfileBinding `json:"items"`
}

// Repository type metadata.
var (
	PolicyGatewayFloodProtectionProfileBinding_Kind             = "PolicyGatewayFloodProtectionProfileBinding"
	PolicyGatewayFloodProtectionProfileBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyGatewayFloodProtectionProfileBinding_Kind}.String()
	PolicyGatewayFloodProtectionProfileBinding_KindAPIVersion   = PolicyGatewayFloodProtectionProfileBinding_Kind + "." + CRDGroupVersion.String()
	PolicyGatewayFloodProtectionProfileBinding_GroupVersionKind = CRDGroupVersion.WithKind(PolicyGatewayFloodProtectionProfileBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyGatewayFloodProtectionProfileBinding{}, &PolicyGatewayFloodProtectionProfileBindingList{})
}
