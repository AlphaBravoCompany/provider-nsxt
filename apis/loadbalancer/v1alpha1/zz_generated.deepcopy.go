//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessListControlObservation) DeepCopyInto(out *AccessListControlObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessListControlObservation.
func (in *AccessListControlObservation) DeepCopy() *AccessListControlObservation {
	if in == nil {
		return nil
	}
	out := new(AccessListControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessListControlParameters) DeepCopyInto(out *AccessListControlParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessListControlParameters.
func (in *AccessListControlParameters) DeepCopy() *AccessListControlParameters {
	if in == nil {
		return nil
	}
	out := new(AccessListControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.ConnectionDrop != nil {
		in, out := &in.ConnectionDrop, &out.ConnectionDrop
		*out = make([]ConnectionDropObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRedirect != nil {
		in, out := &in.HTTPRedirect, &out.HTTPRedirect
		*out = make([]HTTPRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPReject != nil {
		in, out := &in.HTTPReject, &out.HTTPReject
		*out = make([]HTTPRejectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeaderDelete != nil {
		in, out := &in.HTTPRequestHeaderDelete, &out.HTTPRequestHeaderDelete
		*out = make([]HTTPRequestHeaderDeleteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeaderRewrite != nil {
		in, out := &in.HTTPRequestHeaderRewrite, &out.HTTPRequestHeaderRewrite
		*out = make([]HTTPRequestHeaderRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURIRewrite != nil {
		in, out := &in.HTTPRequestURIRewrite, &out.HTTPRequestURIRewrite
		*out = make([]HTTPRequestURIRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeaderDelete != nil {
		in, out := &in.HTTPResponseHeaderDelete, &out.HTTPResponseHeaderDelete
		*out = make([]HTTPResponseHeaderDeleteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeaderRewrite != nil {
		in, out := &in.HTTPResponseHeaderRewrite, &out.HTTPResponseHeaderRewrite
		*out = make([]HTTPResponseHeaderRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JwtAuth != nil {
		in, out := &in.JwtAuth, &out.JwtAuth
		*out = make([]JwtAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLModeSelection != nil {
		in, out := &in.SSLModeSelection, &out.SSLModeSelection
		*out = make([]SSLModeSelectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectPool != nil {
		in, out := &in.SelectPool, &out.SelectPool
		*out = make([]SelectPoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableAssignment != nil {
		in, out := &in.VariableAssignment, &out.VariableAssignment
		*out = make([]VariableAssignmentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariablePersistenceLearn != nil {
		in, out := &in.VariablePersistenceLearn, &out.VariablePersistenceLearn
		*out = make([]VariablePersistenceLearnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariablePersistenceOn != nil {
		in, out := &in.VariablePersistenceOn, &out.VariablePersistenceOn
		*out = make([]VariablePersistenceOnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.ConnectionDrop != nil {
		in, out := &in.ConnectionDrop, &out.ConnectionDrop
		*out = make([]ConnectionDropParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRedirect != nil {
		in, out := &in.HTTPRedirect, &out.HTTPRedirect
		*out = make([]HTTPRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPReject != nil {
		in, out := &in.HTTPReject, &out.HTTPReject
		*out = make([]HTTPRejectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeaderDelete != nil {
		in, out := &in.HTTPRequestHeaderDelete, &out.HTTPRequestHeaderDelete
		*out = make([]HTTPRequestHeaderDeleteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeaderRewrite != nil {
		in, out := &in.HTTPRequestHeaderRewrite, &out.HTTPRequestHeaderRewrite
		*out = make([]HTTPRequestHeaderRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURIRewrite != nil {
		in, out := &in.HTTPRequestURIRewrite, &out.HTTPRequestURIRewrite
		*out = make([]HTTPRequestURIRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeaderDelete != nil {
		in, out := &in.HTTPResponseHeaderDelete, &out.HTTPResponseHeaderDelete
		*out = make([]HTTPResponseHeaderDeleteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeaderRewrite != nil {
		in, out := &in.HTTPResponseHeaderRewrite, &out.HTTPResponseHeaderRewrite
		*out = make([]HTTPResponseHeaderRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JwtAuth != nil {
		in, out := &in.JwtAuth, &out.JwtAuth
		*out = make([]JwtAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLModeSelection != nil {
		in, out := &in.SSLModeSelection, &out.SSLModeSelection
		*out = make([]SSLModeSelectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectPool != nil {
		in, out := &in.SelectPool, &out.SelectPool
		*out = make([]SelectPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableAssignment != nil {
		in, out := &in.VariableAssignment, &out.VariableAssignment
		*out = make([]VariableAssignmentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariablePersistenceLearn != nil {
		in, out := &in.VariablePersistenceLearn, &out.VariablePersistenceLearn
		*out = make([]VariablePersistenceLearnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariablePersistenceOn != nil {
		in, out := &in.VariablePersistenceOn, &out.VariablePersistenceOn
		*out = make([]VariablePersistenceOnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateIssuerDnObservation) DeepCopyInto(out *ClientCertificateIssuerDnObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.IssuerDn != nil {
		in, out := &in.IssuerDn, &out.IssuerDn
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateIssuerDnObservation.
func (in *ClientCertificateIssuerDnObservation) DeepCopy() *ClientCertificateIssuerDnObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateIssuerDnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateIssuerDnParameters) DeepCopyInto(out *ClientCertificateIssuerDnParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.IssuerDn != nil {
		in, out := &in.IssuerDn, &out.IssuerDn
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateIssuerDnParameters.
func (in *ClientCertificateIssuerDnParameters) DeepCopy() *ClientCertificateIssuerDnParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateIssuerDnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateSubjectDnObservation) DeepCopyInto(out *ClientCertificateSubjectDnObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.SubjectDn != nil {
		in, out := &in.SubjectDn, &out.SubjectDn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateSubjectDnObservation.
func (in *ClientCertificateSubjectDnObservation) DeepCopy() *ClientCertificateSubjectDnObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateSubjectDnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateSubjectDnParameters) DeepCopyInto(out *ClientCertificateSubjectDnParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.SubjectDn != nil {
		in, out := &in.SubjectDn, &out.SubjectDn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateSubjectDnParameters.
func (in *ClientCertificateSubjectDnParameters) DeepCopy() *ClientCertificateSubjectDnParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateSubjectDnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientSSLObservation) DeepCopyInto(out *ClientSSLObservation) {
	*out = *in
	if in.CAPaths != nil {
		in, out := &in.CAPaths, &out.CAPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateChainDepth != nil {
		in, out := &in.CertificateChainDepth, &out.CertificateChainDepth
		*out = new(float64)
		**out = **in
	}
	if in.ClientAuth != nil {
		in, out := &in.ClientAuth, &out.ClientAuth
		*out = new(string)
		**out = **in
	}
	if in.CrlPaths != nil {
		in, out := &in.CrlPaths, &out.CrlPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultCertificatePath != nil {
		in, out := &in.DefaultCertificatePath, &out.DefaultCertificatePath
		*out = new(string)
		**out = **in
	}
	if in.SSLProfilePath != nil {
		in, out := &in.SSLProfilePath, &out.SSLProfilePath
		*out = new(string)
		**out = **in
	}
	if in.SniPaths != nil {
		in, out := &in.SniPaths, &out.SniPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientSSLObservation.
func (in *ClientSSLObservation) DeepCopy() *ClientSSLObservation {
	if in == nil {
		return nil
	}
	out := new(ClientSSLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientSSLParameters) DeepCopyInto(out *ClientSSLParameters) {
	*out = *in
	if in.CAPaths != nil {
		in, out := &in.CAPaths, &out.CAPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateChainDepth != nil {
		in, out := &in.CertificateChainDepth, &out.CertificateChainDepth
		*out = new(float64)
		**out = **in
	}
	if in.ClientAuth != nil {
		in, out := &in.ClientAuth, &out.ClientAuth
		*out = new(string)
		**out = **in
	}
	if in.CrlPaths != nil {
		in, out := &in.CrlPaths, &out.CrlPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultCertificatePath != nil {
		in, out := &in.DefaultCertificatePath, &out.DefaultCertificatePath
		*out = new(string)
		**out = **in
	}
	if in.SSLProfilePath != nil {
		in, out := &in.SSLProfilePath, &out.SSLProfilePath
		*out = new(string)
		**out = **in
	}
	if in.SniPaths != nil {
		in, out := &in.SniPaths, &out.SniPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientSSLParameters.
func (in *ClientSSLParameters) DeepCopy() *ClientSSLParameters {
	if in == nil {
		return nil
	}
	out := new(ClientSSLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
	if in.HTTPRequestBody != nil {
		in, out := &in.HTTPRequestBody, &out.HTTPRequestBody
		*out = make([]HTTPRequestBodyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestCookie != nil {
		in, out := &in.HTTPRequestCookie, &out.HTTPRequestCookie
		*out = make([]HTTPRequestCookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeader != nil {
		in, out := &in.HTTPRequestHeader, &out.HTTPRequestHeader
		*out = make([]HTTPRequestHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestMethod != nil {
		in, out := &in.HTTPRequestMethod, &out.HTTPRequestMethod
		*out = make([]HTTPRequestMethodObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURI != nil {
		in, out := &in.HTTPRequestURI, &out.HTTPRequestURI
		*out = make([]HTTPRequestURIObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURIArguments != nil {
		in, out := &in.HTTPRequestURIArguments, &out.HTTPRequestURIArguments
		*out = make([]HTTPRequestURIArgumentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestVersion != nil {
		in, out := &in.HTTPRequestVersion, &out.HTTPRequestVersion
		*out = make([]HTTPRequestVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeader != nil {
		in, out := &in.HTTPResponseHeader, &out.HTTPResponseHeader
		*out = make([]HTTPResponseHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSSL != nil {
		in, out := &in.HTTPSSL, &out.HTTPSSL
		*out = make([]HTTPSSLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPHeader != nil {
		in, out := &in.IPHeader, &out.IPHeader
		*out = make([]IPHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSni != nil {
		in, out := &in.SSLSni, &out.SSLSni
		*out = make([]SSLSniObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHeader != nil {
		in, out := &in.TCPHeader, &out.TCPHeader
		*out = make([]TCPHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.HTTPRequestBody != nil {
		in, out := &in.HTTPRequestBody, &out.HTTPRequestBody
		*out = make([]HTTPRequestBodyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestCookie != nil {
		in, out := &in.HTTPRequestCookie, &out.HTTPRequestCookie
		*out = make([]HTTPRequestCookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestHeader != nil {
		in, out := &in.HTTPRequestHeader, &out.HTTPRequestHeader
		*out = make([]HTTPRequestHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestMethod != nil {
		in, out := &in.HTTPRequestMethod, &out.HTTPRequestMethod
		*out = make([]HTTPRequestMethodParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURI != nil {
		in, out := &in.HTTPRequestURI, &out.HTTPRequestURI
		*out = make([]HTTPRequestURIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestURIArguments != nil {
		in, out := &in.HTTPRequestURIArguments, &out.HTTPRequestURIArguments
		*out = make([]HTTPRequestURIArgumentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPRequestVersion != nil {
		in, out := &in.HTTPRequestVersion, &out.HTTPRequestVersion
		*out = make([]HTTPRequestVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPResponseHeader != nil {
		in, out := &in.HTTPResponseHeader, &out.HTTPResponseHeader
		*out = make([]HTTPResponseHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSSL != nil {
		in, out := &in.HTTPSSL, &out.HTTPSSL
		*out = make([]HTTPSSLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPHeader != nil {
		in, out := &in.IPHeader, &out.IPHeader
		*out = make([]IPHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSni != nil {
		in, out := &in.SSLSni, &out.SSLSni
		*out = make([]SSLSniParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHeader != nil {
		in, out := &in.TCPHeader, &out.TCPHeader
		*out = make([]TCPHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionDropObservation) DeepCopyInto(out *ConnectionDropObservation) {
	*out = *in
	if in.Dummy != nil {
		in, out := &in.Dummy, &out.Dummy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionDropObservation.
func (in *ConnectionDropObservation) DeepCopy() *ConnectionDropObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionDropObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionDropParameters) DeepCopyInto(out *ConnectionDropParameters) {
	*out = *in
	if in.Dummy != nil {
		in, out := &in.Dummy, &out.Dummy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionDropParameters.
func (in *ConnectionDropParameters) DeepCopy() *ConnectionDropParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionDropParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRedirectObservation) DeepCopyInto(out *HTTPRedirectObservation) {
	*out = *in
	if in.RedirectStatus != nil {
		in, out := &in.RedirectStatus, &out.RedirectStatus
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRedirectObservation.
func (in *HTTPRedirectObservation) DeepCopy() *HTTPRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRedirectParameters) DeepCopyInto(out *HTTPRedirectParameters) {
	*out = *in
	if in.RedirectStatus != nil {
		in, out := &in.RedirectStatus, &out.RedirectStatus
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRedirectParameters.
func (in *HTTPRedirectParameters) DeepCopy() *HTTPRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRejectObservation) DeepCopyInto(out *HTTPRejectObservation) {
	*out = *in
	if in.ReplyMessage != nil {
		in, out := &in.ReplyMessage, &out.ReplyMessage
		*out = new(string)
		**out = **in
	}
	if in.ReplyStatus != nil {
		in, out := &in.ReplyStatus, &out.ReplyStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRejectObservation.
func (in *HTTPRejectObservation) DeepCopy() *HTTPRejectObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRejectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRejectParameters) DeepCopyInto(out *HTTPRejectParameters) {
	*out = *in
	if in.ReplyMessage != nil {
		in, out := &in.ReplyMessage, &out.ReplyMessage
		*out = new(string)
		**out = **in
	}
	if in.ReplyStatus != nil {
		in, out := &in.ReplyStatus, &out.ReplyStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRejectParameters.
func (in *HTTPRejectParameters) DeepCopy() *HTTPRejectParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRejectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestBodyObservation) DeepCopyInto(out *HTTPRequestBodyObservation) {
	*out = *in
	if in.BodyValue != nil {
		in, out := &in.BodyValue, &out.BodyValue
		*out = new(string)
		**out = **in
	}
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestBodyObservation.
func (in *HTTPRequestBodyObservation) DeepCopy() *HTTPRequestBodyObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestBodyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestBodyParameters) DeepCopyInto(out *HTTPRequestBodyParameters) {
	*out = *in
	if in.BodyValue != nil {
		in, out := &in.BodyValue, &out.BodyValue
		*out = new(string)
		**out = **in
	}
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestBodyParameters.
func (in *HTTPRequestBodyParameters) DeepCopy() *HTTPRequestBodyParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestBodyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestCookieObservation) DeepCopyInto(out *HTTPRequestCookieObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieValue != nil {
		in, out := &in.CookieValue, &out.CookieValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestCookieObservation.
func (in *HTTPRequestCookieObservation) DeepCopy() *HTTPRequestCookieObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestCookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestCookieParameters) DeepCopyInto(out *HTTPRequestCookieParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieValue != nil {
		in, out := &in.CookieValue, &out.CookieValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestCookieParameters.
func (in *HTTPRequestCookieParameters) DeepCopy() *HTTPRequestCookieParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestCookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderDeleteObservation) DeepCopyInto(out *HTTPRequestHeaderDeleteObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderDeleteObservation.
func (in *HTTPRequestHeaderDeleteObservation) DeepCopy() *HTTPRequestHeaderDeleteObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderDeleteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderDeleteParameters) DeepCopyInto(out *HTTPRequestHeaderDeleteParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderDeleteParameters.
func (in *HTTPRequestHeaderDeleteParameters) DeepCopy() *HTTPRequestHeaderDeleteParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderDeleteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderObservation) DeepCopyInto(out *HTTPRequestHeaderObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderObservation.
func (in *HTTPRequestHeaderObservation) DeepCopy() *HTTPRequestHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderParameters) DeepCopyInto(out *HTTPRequestHeaderParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderParameters.
func (in *HTTPRequestHeaderParameters) DeepCopy() *HTTPRequestHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderRewriteObservation) DeepCopyInto(out *HTTPRequestHeaderRewriteObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderRewriteObservation.
func (in *HTTPRequestHeaderRewriteObservation) DeepCopy() *HTTPRequestHeaderRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestHeaderRewriteParameters) DeepCopyInto(out *HTTPRequestHeaderRewriteParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestHeaderRewriteParameters.
func (in *HTTPRequestHeaderRewriteParameters) DeepCopy() *HTTPRequestHeaderRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestHeaderRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestMethodObservation) DeepCopyInto(out *HTTPRequestMethodObservation) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestMethodObservation.
func (in *HTTPRequestMethodObservation) DeepCopy() *HTTPRequestMethodObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestMethodObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestMethodParameters) DeepCopyInto(out *HTTPRequestMethodParameters) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestMethodParameters.
func (in *HTTPRequestMethodParameters) DeepCopy() *HTTPRequestMethodParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestMethodParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIArgumentsObservation) DeepCopyInto(out *HTTPRequestURIArgumentsObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.URIArguments != nil {
		in, out := &in.URIArguments, &out.URIArguments
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIArgumentsObservation.
func (in *HTTPRequestURIArgumentsObservation) DeepCopy() *HTTPRequestURIArgumentsObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIArgumentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIArgumentsParameters) DeepCopyInto(out *HTTPRequestURIArgumentsParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.URIArguments != nil {
		in, out := &in.URIArguments, &out.URIArguments
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIArgumentsParameters.
func (in *HTTPRequestURIArgumentsParameters) DeepCopy() *HTTPRequestURIArgumentsParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIArgumentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIObservation) DeepCopyInto(out *HTTPRequestURIObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIObservation.
func (in *HTTPRequestURIObservation) DeepCopy() *HTTPRequestURIObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIParameters) DeepCopyInto(out *HTTPRequestURIParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIParameters.
func (in *HTTPRequestURIParameters) DeepCopy() *HTTPRequestURIParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIRewriteObservation) DeepCopyInto(out *HTTPRequestURIRewriteObservation) {
	*out = *in
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.URIArguments != nil {
		in, out := &in.URIArguments, &out.URIArguments
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIRewriteObservation.
func (in *HTTPRequestURIRewriteObservation) DeepCopy() *HTTPRequestURIRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestURIRewriteParameters) DeepCopyInto(out *HTTPRequestURIRewriteParameters) {
	*out = *in
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
	if in.URIArguments != nil {
		in, out := &in.URIArguments, &out.URIArguments
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestURIRewriteParameters.
func (in *HTTPRequestURIRewriteParameters) DeepCopy() *HTTPRequestURIRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestURIRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestVersionObservation) DeepCopyInto(out *HTTPRequestVersionObservation) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestVersionObservation.
func (in *HTTPRequestVersionObservation) DeepCopy() *HTTPRequestVersionObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestVersionParameters) DeepCopyInto(out *HTTPRequestVersionParameters) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestVersionParameters.
func (in *HTTPRequestVersionParameters) DeepCopy() *HTTPRequestVersionParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderDeleteObservation) DeepCopyInto(out *HTTPResponseHeaderDeleteObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderDeleteObservation.
func (in *HTTPResponseHeaderDeleteObservation) DeepCopy() *HTTPResponseHeaderDeleteObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderDeleteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderDeleteParameters) DeepCopyInto(out *HTTPResponseHeaderDeleteParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderDeleteParameters.
func (in *HTTPResponseHeaderDeleteParameters) DeepCopy() *HTTPResponseHeaderDeleteParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderDeleteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderObservation) DeepCopyInto(out *HTTPResponseHeaderObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderObservation.
func (in *HTTPResponseHeaderObservation) DeepCopy() *HTTPResponseHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderParameters) DeepCopyInto(out *HTTPResponseHeaderParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderParameters.
func (in *HTTPResponseHeaderParameters) DeepCopy() *HTTPResponseHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderRewriteObservation) DeepCopyInto(out *HTTPResponseHeaderRewriteObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderRewriteObservation.
func (in *HTTPResponseHeaderRewriteObservation) DeepCopy() *HTTPResponseHeaderRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseHeaderRewriteParameters) DeepCopyInto(out *HTTPResponseHeaderRewriteParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseHeaderRewriteParameters.
func (in *HTTPResponseHeaderRewriteParameters) DeepCopy() *HTTPResponseHeaderRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseHeaderRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSSLObservation) DeepCopyInto(out *HTTPSSLObservation) {
	*out = *in
	if in.ClientCertificateIssuerDn != nil {
		in, out := &in.ClientCertificateIssuerDn, &out.ClientCertificateIssuerDn
		*out = make([]ClientCertificateIssuerDnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertificateSubjectDn != nil {
		in, out := &in.ClientCertificateSubjectDn, &out.ClientCertificateSubjectDn
		*out = make([]ClientCertificateSubjectDnObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientSupportedSSLCiphers != nil {
		in, out := &in.ClientSupportedSSLCiphers, &out.ClientSupportedSSLCiphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SessionReused != nil {
		in, out := &in.SessionReused, &out.SessionReused
		*out = new(string)
		**out = **in
	}
	if in.UsedProtocol != nil {
		in, out := &in.UsedProtocol, &out.UsedProtocol
		*out = new(string)
		**out = **in
	}
	if in.UsedSSLCipher != nil {
		in, out := &in.UsedSSLCipher, &out.UsedSSLCipher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSSLObservation.
func (in *HTTPSSLObservation) DeepCopy() *HTTPSSLObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSSLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSSLParameters) DeepCopyInto(out *HTTPSSLParameters) {
	*out = *in
	if in.ClientCertificateIssuerDn != nil {
		in, out := &in.ClientCertificateIssuerDn, &out.ClientCertificateIssuerDn
		*out = make([]ClientCertificateIssuerDnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertificateSubjectDn != nil {
		in, out := &in.ClientCertificateSubjectDn, &out.ClientCertificateSubjectDn
		*out = make([]ClientCertificateSubjectDnParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientSupportedSSLCiphers != nil {
		in, out := &in.ClientSupportedSSLCiphers, &out.ClientSupportedSSLCiphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SessionReused != nil {
		in, out := &in.SessionReused, &out.SessionReused
		*out = new(string)
		**out = **in
	}
	if in.UsedProtocol != nil {
		in, out := &in.UsedProtocol, &out.UsedProtocol
		*out = new(string)
		**out = **in
	}
	if in.UsedSSLCipher != nil {
		in, out := &in.UsedSSLCipher, &out.UsedSSLCipher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSSLParameters.
func (in *HTTPSSLParameters) DeepCopy() *HTTPSSLParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSSLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPHeaderObservation) DeepCopyInto(out *IPHeaderObservation) {
	*out = *in
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SourceAddress != nil {
		in, out := &in.SourceAddress, &out.SourceAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPHeaderObservation.
func (in *IPHeaderObservation) DeepCopy() *IPHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(IPHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPHeaderParameters) DeepCopyInto(out *IPHeaderParameters) {
	*out = *in
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SourceAddress != nil {
		in, out := &in.SourceAddress, &out.SourceAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPHeaderParameters.
func (in *IPHeaderParameters) DeepCopy() *IPHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(IPHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtAuthObservation) DeepCopyInto(out *JwtAuthObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PassJwtToPool != nil {
		in, out := &in.PassJwtToPool, &out.PassJwtToPool
		*out = new(bool)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtAuthObservation.
func (in *JwtAuthObservation) DeepCopy() *JwtAuthObservation {
	if in == nil {
		return nil
	}
	out := new(JwtAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtAuthParameters) DeepCopyInto(out *JwtAuthParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PassJwtToPool != nil {
		in, out := &in.PassJwtToPool, &out.PassJwtToPool
		*out = new(bool)
		**out = **in
	}
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtAuthParameters.
func (in *JwtAuthParameters) DeepCopy() *JwtAuthParameters {
	if in == nil {
		return nil
	}
	out := new(JwtAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyObservation) DeepCopyInto(out *KeyObservation) {
	*out = *in
	if in.CertificatePath != nil {
		in, out := &in.CertificatePath, &out.CertificatePath
		*out = new(string)
		**out = **in
	}
	if in.PublicKeyContent != nil {
		in, out := &in.PublicKeyContent, &out.PublicKeyContent
		*out = new(string)
		**out = **in
	}
	if in.SymmetricKey != nil {
		in, out := &in.SymmetricKey, &out.SymmetricKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyObservation.
func (in *KeyObservation) DeepCopy() *KeyObservation {
	if in == nil {
		return nil
	}
	out := new(KeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyParameters) DeepCopyInto(out *KeyParameters) {
	*out = *in
	if in.CertificatePath != nil {
		in, out := &in.CertificatePath, &out.CertificatePath
		*out = new(string)
		**out = **in
	}
	if in.PublicKeyContent != nil {
		in, out := &in.PublicKeyContent, &out.PublicKeyContent
		*out = new(string)
		**out = **in
	}
	if in.SymmetricKey != nil {
		in, out := &in.SymmetricKey, &out.SymmetricKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyParameters.
func (in *KeyParameters) DeepCopy() *KeyParameters {
	if in == nil {
		return nil
	}
	out := new(KeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberGroupObservation) DeepCopyInto(out *MemberGroupObservation) {
	*out = *in
	if in.AllowIPv4 != nil {
		in, out := &in.AllowIPv4, &out.AllowIPv4
		*out = new(bool)
		**out = **in
	}
	if in.AllowIPv6 != nil {
		in, out := &in.AllowIPv6, &out.AllowIPv6
		*out = new(bool)
		**out = **in
	}
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
	if in.MaxIPListSize != nil {
		in, out := &in.MaxIPListSize, &out.MaxIPListSize
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberGroupObservation.
func (in *MemberGroupObservation) DeepCopy() *MemberGroupObservation {
	if in == nil {
		return nil
	}
	out := new(MemberGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberGroupParameters) DeepCopyInto(out *MemberGroupParameters) {
	*out = *in
	if in.AllowIPv4 != nil {
		in, out := &in.AllowIPv4, &out.AllowIPv4
		*out = new(bool)
		**out = **in
	}
	if in.AllowIPv6 != nil {
		in, out := &in.AllowIPv6, &out.AllowIPv6
		*out = new(bool)
		**out = **in
	}
	if in.GroupPath != nil {
		in, out := &in.GroupPath, &out.GroupPath
		*out = new(string)
		**out = **in
	}
	if in.MaxIPListSize != nil {
		in, out := &in.MaxIPListSize, &out.MaxIPListSize
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberGroupParameters.
func (in *MemberGroupParameters) DeepCopy() *MemberGroupParameters {
	if in == nil {
		return nil
	}
	out := new(MemberGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberObservation) DeepCopyInto(out *MemberObservation) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.BackupMember != nil {
		in, out := &in.BackupMember, &out.BackupMember
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberObservation.
func (in *MemberObservation) DeepCopy() *MemberObservation {
	if in == nil {
		return nil
	}
	out := new(MemberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemberParameters) DeepCopyInto(out *MemberParameters) {
	*out = *in
	if in.AdminState != nil {
		in, out := &in.AdminState, &out.AdminState
		*out = new(string)
		**out = **in
	}
	if in.BackupMember != nil {
		in, out := &in.BackupMember, &out.BackupMember
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(float64)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemberParameters.
func (in *MemberParameters) DeepCopy() *MemberParameters {
	if in == nil {
		return nil
	}
	out := new(MemberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPool) DeepCopyInto(out *PolicyLbPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPool.
func (in *PolicyLbPool) DeepCopy() *PolicyLbPool {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPoolList) DeepCopyInto(out *PolicyLbPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyLbPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPoolList.
func (in *PolicyLbPoolList) DeepCopy() *PolicyLbPoolList {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPoolObservation) DeepCopyInto(out *PolicyLbPoolObservation) {
	*out = *in
	if in.ActiveMonitorPath != nil {
		in, out := &in.ActiveMonitorPath, &out.ActiveMonitorPath
		*out = new(string)
		**out = **in
	}
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = make([]MemberObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberGroup != nil {
		in, out := &in.MemberGroup, &out.MemberGroup
		*out = make([]MemberGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinActiveMembers != nil {
		in, out := &in.MinActiveMembers, &out.MinActiveMembers
		*out = new(float64)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.PassiveMonitorPath != nil {
		in, out := &in.PassiveMonitorPath, &out.PassiveMonitorPath
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.Snat != nil {
		in, out := &in.Snat, &out.Snat
		*out = make([]SnatObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPMultiplexingEnabled != nil {
		in, out := &in.TCPMultiplexingEnabled, &out.TCPMultiplexingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TCPMultiplexingNumber != nil {
		in, out := &in.TCPMultiplexingNumber, &out.TCPMultiplexingNumber
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPoolObservation.
func (in *PolicyLbPoolObservation) DeepCopy() *PolicyLbPoolObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPoolParameters) DeepCopyInto(out *PolicyLbPoolParameters) {
	*out = *in
	if in.ActiveMonitorPath != nil {
		in, out := &in.ActiveMonitorPath, &out.ActiveMonitorPath
		*out = new(string)
		**out = **in
	}
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = make([]MemberParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberGroup != nil {
		in, out := &in.MemberGroup, &out.MemberGroup
		*out = make([]MemberGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinActiveMembers != nil {
		in, out := &in.MinActiveMembers, &out.MinActiveMembers
		*out = new(float64)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.PassiveMonitorPath != nil {
		in, out := &in.PassiveMonitorPath, &out.PassiveMonitorPath
		*out = new(string)
		**out = **in
	}
	if in.Snat != nil {
		in, out := &in.Snat, &out.Snat
		*out = make([]SnatParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPMultiplexingEnabled != nil {
		in, out := &in.TCPMultiplexingEnabled, &out.TCPMultiplexingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TCPMultiplexingNumber != nil {
		in, out := &in.TCPMultiplexingNumber, &out.TCPMultiplexingNumber
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPoolParameters.
func (in *PolicyLbPoolParameters) DeepCopy() *PolicyLbPoolParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPoolSpec) DeepCopyInto(out *PolicyLbPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPoolSpec.
func (in *PolicyLbPoolSpec) DeepCopy() *PolicyLbPoolSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbPoolStatus) DeepCopyInto(out *PolicyLbPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbPoolStatus.
func (in *PolicyLbPoolStatus) DeepCopy() *PolicyLbPoolStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyLbPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbService) DeepCopyInto(out *PolicyLbService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbService.
func (in *PolicyLbService) DeepCopy() *PolicyLbService {
	if in == nil {
		return nil
	}
	out := new(PolicyLbService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceList) DeepCopyInto(out *PolicyLbServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyLbService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceList.
func (in *PolicyLbServiceList) DeepCopy() *PolicyLbServiceList {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceObservation) DeepCopyInto(out *PolicyLbServiceObservation) {
	*out = *in
	if in.ConnectivityPath != nil {
		in, out := &in.ConnectivityPath, &out.ConnectivityPath
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorLogLevel != nil {
		in, out := &in.ErrorLogLevel, &out.ErrorLogLevel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]PolicyLbServiceTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceObservation.
func (in *PolicyLbServiceObservation) DeepCopy() *PolicyLbServiceObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceParameters) DeepCopyInto(out *PolicyLbServiceParameters) {
	*out = *in
	if in.ConnectivityPath != nil {
		in, out := &in.ConnectivityPath, &out.ConnectivityPath
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ErrorLogLevel != nil {
		in, out := &in.ErrorLogLevel, &out.ErrorLogLevel
		*out = new(string)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]PolicyLbServiceTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceParameters.
func (in *PolicyLbServiceParameters) DeepCopy() *PolicyLbServiceParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceSpec) DeepCopyInto(out *PolicyLbServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceSpec.
func (in *PolicyLbServiceSpec) DeepCopy() *PolicyLbServiceSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceStatus) DeepCopyInto(out *PolicyLbServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceStatus.
func (in *PolicyLbServiceStatus) DeepCopy() *PolicyLbServiceStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceTagObservation) DeepCopyInto(out *PolicyLbServiceTagObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceTagObservation.
func (in *PolicyLbServiceTagObservation) DeepCopy() *PolicyLbServiceTagObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbServiceTagParameters) DeepCopyInto(out *PolicyLbServiceTagParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbServiceTagParameters.
func (in *PolicyLbServiceTagParameters) DeepCopy() *PolicyLbServiceTagParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyLbServiceTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServer) DeepCopyInto(out *PolicyLbVirtualServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServer.
func (in *PolicyLbVirtualServer) DeepCopy() *PolicyLbVirtualServer {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbVirtualServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerList) DeepCopyInto(out *PolicyLbVirtualServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyLbVirtualServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerList.
func (in *PolicyLbVirtualServerList) DeepCopy() *PolicyLbVirtualServerList {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyLbVirtualServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerObservation) DeepCopyInto(out *PolicyLbVirtualServerObservation) {
	*out = *in
	if in.AccessListControl != nil {
		in, out := &in.AccessListControl, &out.AccessListControl
		*out = make([]AccessListControlObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessLogEnabled != nil {
		in, out := &in.AccessLogEnabled, &out.AccessLogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationProfilePath != nil {
		in, out := &in.ApplicationProfilePath, &out.ApplicationProfilePath
		*out = new(string)
		**out = **in
	}
	if in.ClientSSL != nil {
		in, out := &in.ClientSSL, &out.ClientSSL
		*out = make([]ClientSSLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPoolMemberPorts != nil {
		in, out := &in.DefaultPoolMemberPorts, &out.DefaultPoolMemberPorts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.LogSignificantEventOnly != nil {
		in, out := &in.LogSignificantEventOnly, &out.LogSignificantEventOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxNewConnectionRate != nil {
		in, out := &in.MaxNewConnectionRate, &out.MaxNewConnectionRate
		*out = new(float64)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.PoolPath != nil {
		in, out := &in.PoolPath, &out.PoolPath
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerSSL != nil {
		in, out := &in.ServerSSL, &out.ServerSSL
		*out = make([]ServerSSLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePath != nil {
		in, out := &in.ServicePath, &out.ServicePath
		*out = new(string)
		**out = **in
	}
	if in.SorryPoolPath != nil {
		in, out := &in.SorryPoolPath, &out.SorryPoolPath
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]PolicyLbVirtualServerTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerObservation.
func (in *PolicyLbVirtualServerObservation) DeepCopy() *PolicyLbVirtualServerObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerParameters) DeepCopyInto(out *PolicyLbVirtualServerParameters) {
	*out = *in
	if in.AccessListControl != nil {
		in, out := &in.AccessListControl, &out.AccessListControl
		*out = make([]AccessListControlParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AccessLogEnabled != nil {
		in, out := &in.AccessLogEnabled, &out.AccessLogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ApplicationProfilePath != nil {
		in, out := &in.ApplicationProfilePath, &out.ApplicationProfilePath
		*out = new(string)
		**out = **in
	}
	if in.ClientSSL != nil {
		in, out := &in.ClientSSL, &out.ClientSSL
		*out = make([]ClientSSLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPoolMemberPorts != nil {
		in, out := &in.DefaultPoolMemberPorts, &out.DefaultPoolMemberPorts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.LogSignificantEventOnly != nil {
		in, out := &in.LogSignificantEventOnly, &out.LogSignificantEventOnly
		*out = new(bool)
		**out = **in
	}
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxNewConnectionRate != nil {
		in, out := &in.MaxNewConnectionRate, &out.MaxNewConnectionRate
		*out = new(float64)
		**out = **in
	}
	if in.NsxID != nil {
		in, out := &in.NsxID, &out.NsxID
		*out = new(string)
		**out = **in
	}
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.PoolPath != nil {
		in, out := &in.PoolPath, &out.PoolPath
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerSSL != nil {
		in, out := &in.ServerSSL, &out.ServerSSL
		*out = make([]ServerSSLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServicePath != nil {
		in, out := &in.ServicePath, &out.ServicePath
		*out = new(string)
		**out = **in
	}
	if in.SorryPoolPath != nil {
		in, out := &in.SorryPoolPath, &out.SorryPoolPath
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]PolicyLbVirtualServerTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerParameters.
func (in *PolicyLbVirtualServerParameters) DeepCopy() *PolicyLbVirtualServerParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerSpec) DeepCopyInto(out *PolicyLbVirtualServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerSpec.
func (in *PolicyLbVirtualServerSpec) DeepCopy() *PolicyLbVirtualServerSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerStatus) DeepCopyInto(out *PolicyLbVirtualServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerStatus.
func (in *PolicyLbVirtualServerStatus) DeepCopy() *PolicyLbVirtualServerStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerTagObservation) DeepCopyInto(out *PolicyLbVirtualServerTagObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerTagObservation.
func (in *PolicyLbVirtualServerTagObservation) DeepCopy() *PolicyLbVirtualServerTagObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyLbVirtualServerTagParameters) DeepCopyInto(out *PolicyLbVirtualServerTagParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyLbVirtualServerTagParameters.
func (in *PolicyLbVirtualServerTagParameters) DeepCopy() *PolicyLbVirtualServerTagParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyLbVirtualServerTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MatchStrategy != nil {
		in, out := &in.MatchStrategy, &out.MatchStrategy
		*out = new(string)
		**out = **in
	}
	if in.Phase != nil {
		in, out := &in.Phase, &out.Phase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MatchStrategy != nil {
		in, out := &in.MatchStrategy, &out.MatchStrategy
		*out = new(string)
		**out = **in
	}
	if in.Phase != nil {
		in, out := &in.Phase, &out.Phase
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLModeSelectionObservation) DeepCopyInto(out *SSLModeSelectionObservation) {
	*out = *in
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLModeSelectionObservation.
func (in *SSLModeSelectionObservation) DeepCopy() *SSLModeSelectionObservation {
	if in == nil {
		return nil
	}
	out := new(SSLModeSelectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLModeSelectionParameters) DeepCopyInto(out *SSLModeSelectionParameters) {
	*out = *in
	if in.SSLMode != nil {
		in, out := &in.SSLMode, &out.SSLMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLModeSelectionParameters.
func (in *SSLModeSelectionParameters) DeepCopy() *SSLModeSelectionParameters {
	if in == nil {
		return nil
	}
	out := new(SSLModeSelectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLSniObservation) DeepCopyInto(out *SSLSniObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.Sni != nil {
		in, out := &in.Sni, &out.Sni
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLSniObservation.
func (in *SSLSniObservation) DeepCopy() *SSLSniObservation {
	if in == nil {
		return nil
	}
	out := new(SSLSniObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLSniParameters) DeepCopyInto(out *SSLSniParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.Sni != nil {
		in, out := &in.Sni, &out.Sni
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLSniParameters.
func (in *SSLSniParameters) DeepCopy() *SSLSniParameters {
	if in == nil {
		return nil
	}
	out := new(SSLSniParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectPoolObservation) DeepCopyInto(out *SelectPoolObservation) {
	*out = *in
	if in.PoolID != nil {
		in, out := &in.PoolID, &out.PoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectPoolObservation.
func (in *SelectPoolObservation) DeepCopy() *SelectPoolObservation {
	if in == nil {
		return nil
	}
	out := new(SelectPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectPoolParameters) DeepCopyInto(out *SelectPoolParameters) {
	*out = *in
	if in.PoolID != nil {
		in, out := &in.PoolID, &out.PoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectPoolParameters.
func (in *SelectPoolParameters) DeepCopy() *SelectPoolParameters {
	if in == nil {
		return nil
	}
	out := new(SelectPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSSLObservation) DeepCopyInto(out *ServerSSLObservation) {
	*out = *in
	if in.CAPaths != nil {
		in, out := &in.CAPaths, &out.CAPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateChainDepth != nil {
		in, out := &in.CertificateChainDepth, &out.CertificateChainDepth
		*out = new(float64)
		**out = **in
	}
	if in.ClientCertificatePath != nil {
		in, out := &in.ClientCertificatePath, &out.ClientCertificatePath
		*out = new(string)
		**out = **in
	}
	if in.CrlPaths != nil {
		in, out := &in.CrlPaths, &out.CrlPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLProfilePath != nil {
		in, out := &in.SSLProfilePath, &out.SSLProfilePath
		*out = new(string)
		**out = **in
	}
	if in.ServerAuth != nil {
		in, out := &in.ServerAuth, &out.ServerAuth
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSSLObservation.
func (in *ServerSSLObservation) DeepCopy() *ServerSSLObservation {
	if in == nil {
		return nil
	}
	out := new(ServerSSLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSSLParameters) DeepCopyInto(out *ServerSSLParameters) {
	*out = *in
	if in.CAPaths != nil {
		in, out := &in.CAPaths, &out.CAPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateChainDepth != nil {
		in, out := &in.CertificateChainDepth, &out.CertificateChainDepth
		*out = new(float64)
		**out = **in
	}
	if in.ClientCertificatePath != nil {
		in, out := &in.ClientCertificatePath, &out.ClientCertificatePath
		*out = new(string)
		**out = **in
	}
	if in.CrlPaths != nil {
		in, out := &in.CrlPaths, &out.CrlPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLProfilePath != nil {
		in, out := &in.SSLProfilePath, &out.SSLProfilePath
		*out = new(string)
		**out = **in
	}
	if in.ServerAuth != nil {
		in, out := &in.ServerAuth, &out.ServerAuth
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSSLParameters.
func (in *ServerSSLParameters) DeepCopy() *ServerSSLParameters {
	if in == nil {
		return nil
	}
	out := new(ServerSSLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatObservation) DeepCopyInto(out *SnatObservation) {
	*out = *in
	if in.IPPoolAddresses != nil {
		in, out := &in.IPPoolAddresses, &out.IPPoolAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatObservation.
func (in *SnatObservation) DeepCopy() *SnatObservation {
	if in == nil {
		return nil
	}
	out := new(SnatObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatParameters) DeepCopyInto(out *SnatParameters) {
	*out = *in
	if in.IPPoolAddresses != nil {
		in, out := &in.IPPoolAddresses, &out.IPPoolAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatParameters.
func (in *SnatParameters) DeepCopy() *SnatParameters {
	if in == nil {
		return nil
	}
	out := new(SnatParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHeaderObservation) DeepCopyInto(out *TCPHeaderObservation) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SourcePort != nil {
		in, out := &in.SourcePort, &out.SourcePort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHeaderObservation.
func (in *TCPHeaderObservation) DeepCopy() *TCPHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(TCPHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHeaderParameters) DeepCopyInto(out *TCPHeaderParameters) {
	*out = *in
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.SourcePort != nil {
		in, out := &in.SourcePort, &out.SourcePort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHeaderParameters.
func (in *TCPHeaderParameters) DeepCopy() *TCPHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(TCPHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableAssignmentObservation) DeepCopyInto(out *VariableAssignmentObservation) {
	*out = *in
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.VariableValue != nil {
		in, out := &in.VariableValue, &out.VariableValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableAssignmentObservation.
func (in *VariableAssignmentObservation) DeepCopy() *VariableAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(VariableAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableAssignmentParameters) DeepCopyInto(out *VariableAssignmentParameters) {
	*out = *in
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.VariableValue != nil {
		in, out := &in.VariableValue, &out.VariableValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableAssignmentParameters.
func (in *VariableAssignmentParameters) DeepCopy() *VariableAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(VariableAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.VariableValue != nil {
		in, out := &in.VariableValue, &out.VariableValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.CaseSensitive != nil {
		in, out := &in.CaseSensitive, &out.CaseSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Inverse != nil {
		in, out := &in.Inverse, &out.Inverse
		*out = new(bool)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
	if in.VariableValue != nil {
		in, out := &in.VariableValue, &out.VariableValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablePersistenceLearnObservation) DeepCopyInto(out *VariablePersistenceLearnObservation) {
	*out = *in
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.VariableHashEnabled != nil {
		in, out := &in.VariableHashEnabled, &out.VariableHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablePersistenceLearnObservation.
func (in *VariablePersistenceLearnObservation) DeepCopy() *VariablePersistenceLearnObservation {
	if in == nil {
		return nil
	}
	out := new(VariablePersistenceLearnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablePersistenceLearnParameters) DeepCopyInto(out *VariablePersistenceLearnParameters) {
	*out = *in
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.VariableHashEnabled != nil {
		in, out := &in.VariableHashEnabled, &out.VariableHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablePersistenceLearnParameters.
func (in *VariablePersistenceLearnParameters) DeepCopy() *VariablePersistenceLearnParameters {
	if in == nil {
		return nil
	}
	out := new(VariablePersistenceLearnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablePersistenceOnObservation) DeepCopyInto(out *VariablePersistenceOnObservation) {
	*out = *in
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.VariableHashEnabled != nil {
		in, out := &in.VariableHashEnabled, &out.VariableHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablePersistenceOnObservation.
func (in *VariablePersistenceOnObservation) DeepCopy() *VariablePersistenceOnObservation {
	if in == nil {
		return nil
	}
	out := new(VariablePersistenceOnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariablePersistenceOnParameters) DeepCopyInto(out *VariablePersistenceOnParameters) {
	*out = *in
	if in.PersistenceProfilePath != nil {
		in, out := &in.PersistenceProfilePath, &out.PersistenceProfilePath
		*out = new(string)
		**out = **in
	}
	if in.VariableHashEnabled != nil {
		in, out := &in.VariableHashEnabled, &out.VariableHashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VariableName != nil {
		in, out := &in.VariableName, &out.VariableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariablePersistenceOnParameters.
func (in *VariablePersistenceOnParameters) DeepCopy() *VariablePersistenceOnParameters {
	if in == nil {
		return nil
	}
	out := new(VariablePersistenceOnParameters)
	in.DeepCopyInto(out)
	return out
}
