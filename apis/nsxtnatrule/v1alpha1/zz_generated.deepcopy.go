//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRule) DeepCopyInto(out *NatRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRule.
func (in *NatRule) DeepCopy() *NatRule {
	if in == nil {
		return nil
	}
	out := new(NatRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleList) DeepCopyInto(out *NatRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NatRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleList.
func (in *NatRuleList) DeepCopy() *NatRuleList {
	if in == nil {
		return nil
	}
	out := new(NatRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleObservation) DeepCopyInto(out *NatRuleObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(bool)
		**out = **in
	}
	if in.LogicalRouterID != nil {
		in, out := &in.LogicalRouterID, &out.LogicalRouterID
		*out = new(string)
		**out = **in
	}
	if in.MatchDestinationNetwork != nil {
		in, out := &in.MatchDestinationNetwork, &out.MatchDestinationNetwork
		*out = new(string)
		**out = **in
	}
	if in.MatchSourceNetwork != nil {
		in, out := &in.MatchSourceNetwork, &out.MatchSourceNetwork
		*out = new(string)
		**out = **in
	}
	if in.NATPass != nil {
		in, out := &in.NATPass, &out.NATPass
		*out = new(bool)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.RulePriority != nil {
		in, out := &in.RulePriority, &out.RulePriority
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TranslatedNetwork != nil {
		in, out := &in.TranslatedNetwork, &out.TranslatedNetwork
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPorts != nil {
		in, out := &in.TranslatedPorts, &out.TranslatedPorts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleObservation.
func (in *NatRuleObservation) DeepCopy() *NatRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NatRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleParameters) DeepCopyInto(out *NatRuleParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(bool)
		**out = **in
	}
	if in.LogicalRouterID != nil {
		in, out := &in.LogicalRouterID, &out.LogicalRouterID
		*out = new(string)
		**out = **in
	}
	if in.MatchDestinationNetwork != nil {
		in, out := &in.MatchDestinationNetwork, &out.MatchDestinationNetwork
		*out = new(string)
		**out = **in
	}
	if in.MatchSourceNetwork != nil {
		in, out := &in.MatchSourceNetwork, &out.MatchSourceNetwork
		*out = new(string)
		**out = **in
	}
	if in.NATPass != nil {
		in, out := &in.NATPass, &out.NATPass
		*out = new(bool)
		**out = **in
	}
	if in.RulePriority != nil {
		in, out := &in.RulePriority, &out.RulePriority
		*out = new(float64)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TranslatedNetwork != nil {
		in, out := &in.TranslatedNetwork, &out.TranslatedNetwork
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPorts != nil {
		in, out := &in.TranslatedPorts, &out.TranslatedPorts
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleParameters.
func (in *NatRuleParameters) DeepCopy() *NatRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NatRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleSpec) DeepCopyInto(out *NatRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleSpec.
func (in *NatRuleSpec) DeepCopy() *NatRuleSpec {
	if in == nil {
		return nil
	}
	out := new(NatRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleStatus) DeepCopyInto(out *NatRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleStatus.
func (in *NatRuleStatus) DeepCopy() *NatRuleStatus {
	if in == nil {
		return nil
	}
	out := new(NatRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}
