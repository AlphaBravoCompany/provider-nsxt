/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnDpdProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnDpdProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnDpdProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnDpdProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnDpdProfile.
func (mg *PolicyIpsecVpnDpdProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnIkeProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnIkeProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnIkeProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnIkeProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnIkeProfile.
func (mg *PolicyIpsecVpnIkeProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnLocalEndpoint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnLocalEndpoint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnLocalEndpoint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnLocalEndpoint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnLocalEndpoint.
func (mg *PolicyIpsecVpnLocalEndpoint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnService.
func (mg *PolicyIpsecVpnService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnSession.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnSession) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnSession.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnSession) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnSession.
func (mg *PolicyIpsecVpnSession) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyIpsecVpnTunnelProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnTunnelProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyIpsecVpnTunnelProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyIpsecVpnTunnelProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyIpsecVpnTunnelProfile.
func (mg *PolicyIpsecVpnTunnelProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyL2VpnService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyL2VpnService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyL2VpnService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyL2VpnService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyL2VpnService.
func (mg *PolicyL2VpnService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyL2VpnSession.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyL2VpnSession) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyL2VpnSession.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyL2VpnSession) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyL2VpnSession.
func (mg *PolicyL2VpnSession) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
