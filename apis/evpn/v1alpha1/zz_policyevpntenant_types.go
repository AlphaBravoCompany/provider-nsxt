/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MappingObservation struct {

	// Values for attribute key
	Vlans *string `json:"vlans,omitempty" tf:"vlans,omitempty"`

	// Values for attribute key
	Vnis *string `json:"vnis,omitempty" tf:"vnis,omitempty"`
}

type MappingParameters struct {

	// Values for attribute key
	// +kubebuilder:validation:Required
	Vlans *string `json:"vlans" tf:"vlans,omitempty"`

	// Values for attribute key
	// +kubebuilder:validation:Required
	Vnis *string `json:"vnis" tf:"vnis,omitempty"`
}

type PolicyEvpnTenantObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Mapping []MappingObservation `json:"mapping,omitempty" tf:"mapping,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyEvpnTenantTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// Policy path to overlay transport zone
	TransportZonePath *string `json:"transportZonePath,omitempty" tf:"transport_zone_path,omitempty"`

	// Policy path to the vni pool used for Evpn in ROUTE-SERVER mode
	VniPoolPath *string `json:"vniPoolPath,omitempty" tf:"vni_pool_path,omitempty"`
}

type PolicyEvpnTenantParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Optional
	Mapping []MappingParameters `json:"mapping,omitempty" tf:"mapping,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyEvpnTenantTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// Policy path to overlay transport zone
	// +kubebuilder:validation:Optional
	TransportZonePath *string `json:"transportZonePath,omitempty" tf:"transport_zone_path,omitempty"`

	// Policy path to the vni pool used for Evpn in ROUTE-SERVER mode
	// +kubebuilder:validation:Optional
	VniPoolPath *string `json:"vniPoolPath,omitempty" tf:"vni_pool_path,omitempty"`
}

type PolicyEvpnTenantTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyEvpnTenantTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyEvpnTenantSpec defines the desired state of PolicyEvpnTenant
type PolicyEvpnTenantSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyEvpnTenantParameters `json:"forProvider"`
}

// PolicyEvpnTenantStatus defines the observed state of PolicyEvpnTenant.
type PolicyEvpnTenantStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyEvpnTenantObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyEvpnTenant is the Schema for the PolicyEvpnTenants API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyEvpnTenant struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.mapping)",message="mapping is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.transportZonePath)",message="transportZonePath is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.vniPoolPath)",message="vniPoolPath is a required parameter"
	Spec   PolicyEvpnTenantSpec   `json:"spec"`
	Status PolicyEvpnTenantStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyEvpnTenantList contains a list of PolicyEvpnTenants
type PolicyEvpnTenantList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyEvpnTenant `json:"items"`
}

// Repository type metadata.
var (
	PolicyEvpnTenant_Kind             = "PolicyEvpnTenant"
	PolicyEvpnTenant_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyEvpnTenant_Kind}.String()
	PolicyEvpnTenant_KindAPIVersion   = PolicyEvpnTenant_Kind + "." + CRDGroupVersion.String()
	PolicyEvpnTenant_GroupVersionKind = CRDGroupVersion.WithKind(PolicyEvpnTenant_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyEvpnTenant{}, &PolicyEvpnTenantList{})
}
