/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ClusterVirtualIp.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ClusterVirtualIp) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ClusterVirtualIp.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ClusterVirtualIp) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this ClusterVirtualIp.
func (mg *ClusterVirtualIp) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ComputeManager.
func (mg *ComputeManager) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ComputeManager.
func (mg *ComputeManager) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this ComputeManager.
func (mg *ComputeManager) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this ComputeManager.
func (mg *ComputeManager) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ComputeManager.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ComputeManager) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this ComputeManager.
func (mg *ComputeManager) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this ComputeManager.
func (mg *ComputeManager) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ComputeManager.
func (mg *ComputeManager) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ComputeManager.
func (mg *ComputeManager) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this ComputeManager.
func (mg *ComputeManager) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this ComputeManager.
func (mg *ComputeManager) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ComputeManager.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ComputeManager) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this ComputeManager.
func (mg *ComputeManager) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this ComputeManager.
func (mg *ComputeManager) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EdgeCluster.
func (mg *EdgeCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EdgeCluster.
func (mg *EdgeCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this EdgeCluster.
func (mg *EdgeCluster) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this EdgeCluster.
func (mg *EdgeCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EdgeCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EdgeCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this EdgeCluster.
func (mg *EdgeCluster) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this EdgeCluster.
func (mg *EdgeCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EdgeCluster.
func (mg *EdgeCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EdgeCluster.
func (mg *EdgeCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this EdgeCluster.
func (mg *EdgeCluster) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this EdgeCluster.
func (mg *EdgeCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EdgeCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EdgeCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this EdgeCluster.
func (mg *EdgeCluster) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this EdgeCluster.
func (mg *EdgeCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EdgeTransportNodeRtep.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EdgeTransportNodeRtep) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EdgeTransportNodeRtep.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EdgeTransportNodeRtep) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this EdgeTransportNodeRtep.
func (mg *EdgeTransportNodeRtep) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FailureDomain.
func (mg *FailureDomain) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FailureDomain.
func (mg *FailureDomain) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this FailureDomain.
func (mg *FailureDomain) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this FailureDomain.
func (mg *FailureDomain) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FailureDomain.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FailureDomain) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this FailureDomain.
func (mg *FailureDomain) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this FailureDomain.
func (mg *FailureDomain) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FailureDomain.
func (mg *FailureDomain) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FailureDomain.
func (mg *FailureDomain) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this FailureDomain.
func (mg *FailureDomain) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this FailureDomain.
func (mg *FailureDomain) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FailureDomain.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FailureDomain) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this FailureDomain.
func (mg *FailureDomain) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this FailureDomain.
func (mg *FailureDomain) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ManagerCluster.
func (mg *ManagerCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ManagerCluster.
func (mg *ManagerCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this ManagerCluster.
func (mg *ManagerCluster) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this ManagerCluster.
func (mg *ManagerCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ManagerCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ManagerCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this ManagerCluster.
func (mg *ManagerCluster) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this ManagerCluster.
func (mg *ManagerCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ManagerCluster.
func (mg *ManagerCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ManagerCluster.
func (mg *ManagerCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this ManagerCluster.
func (mg *ManagerCluster) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this ManagerCluster.
func (mg *ManagerCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ManagerCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ManagerCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this ManagerCluster.
func (mg *ManagerCluster) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this ManagerCluster.
func (mg *ManagerCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyDistributedFloodProtectionProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyDistributedFloodProtectionProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyDistributedFloodProtectionProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyDistributedFloodProtectionProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyDistributedFloodProtectionProfile.
func (mg *PolicyDistributedFloodProtectionProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyDistributedFloodProtectionProfileBinding.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyDistributedFloodProtectionProfileBinding.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyDistributedFloodProtectionProfileBinding.
func (mg *PolicyDistributedFloodProtectionProfileBinding) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyGatewayFloodProtectionProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyGatewayFloodProtectionProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyGatewayFloodProtectionProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyGatewayFloodProtectionProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyGatewayFloodProtectionProfile.
func (mg *PolicyGatewayFloodProtectionProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyGatewayFloodProtectionProfileBinding.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyGatewayFloodProtectionProfileBinding.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyGatewayFloodProtectionProfileBinding.
func (mg *PolicyGatewayFloodProtectionProfileBinding) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyGlobalManager.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyGlobalManager) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyGlobalManager.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyGlobalManager) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyGlobalManager.
func (mg *PolicyGlobalManager) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyHostTransportNodeProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyHostTransportNodeProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyHostTransportNodeProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyHostTransportNodeProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyHostTransportNodeProfile.
func (mg *PolicyHostTransportNodeProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbClientSslProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbClientSslProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbClientSslProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbClientSslProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbClientSslProfile.
func (mg *PolicyLbClientSslProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbHttpApplicationProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbHttpApplicationProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbHttpApplicationProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbHttpApplicationProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbHttpApplicationProfile.
func (mg *PolicyLbHttpApplicationProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbHttpMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbHttpMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbHttpMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbHttpMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbHttpMonitorProfile.
func (mg *PolicyLbHttpMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbHttpsMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbHttpsMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbHttpsMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbHttpsMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbHttpsMonitorProfile.
func (mg *PolicyLbHttpsMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbIcmpMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbIcmpMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbIcmpMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbIcmpMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbIcmpMonitorProfile.
func (mg *PolicyLbIcmpMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbPassiveMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbPassiveMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbPassiveMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbPassiveMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbPassiveMonitorProfile.
func (mg *PolicyLbPassiveMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbTcpMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbTcpMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbTcpMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbTcpMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbTcpMonitorProfile.
func (mg *PolicyLbTcpMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyLbUdpMonitorProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyLbUdpMonitorProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyLbUdpMonitorProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyLbUdpMonitorProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyLbUdpMonitorProfile.
func (mg *PolicyLbUdpMonitorProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyMetadataProxy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyMetadataProxy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyMetadataProxy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyMetadataProxy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyMetadataProxy.
func (mg *PolicyMetadataProxy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicySite.
func (mg *PolicySite) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicySite.
func (mg *PolicySite) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicySite.
func (mg *PolicySite) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicySite.
func (mg *PolicySite) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicySite.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicySite) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicySite.
func (mg *PolicySite) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicySite.
func (mg *PolicySite) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicySite.
func (mg *PolicySite) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicySite.
func (mg *PolicySite) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicySite.
func (mg *PolicySite) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicySite.
func (mg *PolicySite) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicySite.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicySite) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicySite.
func (mg *PolicySite) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicySite.
func (mg *PolicySite) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyTier0GatewayGreTunnel.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyTier0GatewayGreTunnel) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyTier0GatewayGreTunnel.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyTier0GatewayGreTunnel) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyTier0GatewayGreTunnel.
func (mg *PolicyTier0GatewayGreTunnel) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyTier0InterVrfRouting.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyTier0InterVrfRouting) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyTier0InterVrfRouting.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyTier0InterVrfRouting) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyTier0InterVrfRouting.
func (mg *PolicyTier0InterVrfRouting) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyTransportZone.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyTransportZone) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyTransportZone.
func (mg *PolicyTransportZone) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyTransportZone.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyTransportZone) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyTransportZone.
func (mg *PolicyTransportZone) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this UpgradePrecheckAcknowledge.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *UpgradePrecheckAcknowledge) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this UpgradePrecheckAcknowledge.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *UpgradePrecheckAcknowledge) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this UpgradePrecheckAcknowledge.
func (mg *UpgradePrecheckAcknowledge) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this UpgradePrepare.
func (mg *UpgradePrepare) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this UpgradePrepare.
func (mg *UpgradePrepare) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this UpgradePrepare.
func (mg *UpgradePrepare) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this UpgradePrepare.
func (mg *UpgradePrepare) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this UpgradePrepare.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *UpgradePrepare) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this UpgradePrepare.
func (mg *UpgradePrepare) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this UpgradePrepare.
func (mg *UpgradePrepare) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this UpgradePrepare.
func (mg *UpgradePrepare) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this UpgradePrepare.
func (mg *UpgradePrepare) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this UpgradePrepare.
func (mg *UpgradePrepare) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this UpgradePrepare.
func (mg *UpgradePrepare) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this UpgradePrepare.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *UpgradePrepare) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this UpgradePrepare.
func (mg *UpgradePrepare) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this UpgradePrepare.
func (mg *UpgradePrepare) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this UpgradeRun.
func (mg *UpgradeRun) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this UpgradeRun.
func (mg *UpgradeRun) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this UpgradeRun.
func (mg *UpgradeRun) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this UpgradeRun.
func (mg *UpgradeRun) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this UpgradeRun.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *UpgradeRun) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this UpgradeRun.
func (mg *UpgradeRun) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this UpgradeRun.
func (mg *UpgradeRun) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this UpgradeRun.
func (mg *UpgradeRun) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this UpgradeRun.
func (mg *UpgradeRun) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this UpgradeRun.
func (mg *UpgradeRun) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this UpgradeRun.
func (mg *UpgradeRun) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this UpgradeRun.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *UpgradeRun) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this UpgradeRun.
func (mg *UpgradeRun) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this UpgradeRun.
func (mg *UpgradeRun) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
