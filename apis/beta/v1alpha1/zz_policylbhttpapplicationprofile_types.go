/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyLbHttpApplicationProfileObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// A URL that incoming requests for that virtual server can be temporarily redirected to, If a website is temporarily down or has moved
	HTTPRedirectTo *string `json:"httpRedirectTo,omitempty" tf:"http_redirect_to,omitempty"`

	// A boolean flag which reflects whether the client will automatically be redirected to use SSL
	HTTPRedirectToHTTPS *bool `json:"httpRedirectToHttps,omitempty" tf:"http_redirect_to_https,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Timeout in seconds to specify how long an HTTP application can remain idle
	IdleTimeout *float64 `json:"idleTimeout,omitempty" tf:"idle_timeout,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// Maximum request body size in bytes (Unlimited if not specified)
	RequestBodySize *float64 `json:"requestBodySize,omitempty" tf:"request_body_size,omitempty"`

	// Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a request with header below this specified size is guaranteed to be processed
	RequestHeaderSize *float64 `json:"requestHeaderSize,omitempty" tf:"request_header_size,omitempty"`

	// A boolean flag indicating whether the response received by LB from the backend will be saved into the buffers
	ResponseBuffering *bool `json:"responseBuffering,omitempty" tf:"response_buffering,omitempty"`

	// Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a request with header below this specified size is guaranteed to be processed
	ResponseHeaderSize *float64 `json:"responseHeaderSize,omitempty" tf:"response_header_size,omitempty"`

	// Number of seconds waiting for the server response before the connection is closed
	ResponseTimeout *float64 `json:"responseTimeout,omitempty" tf:"response_timeout,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// A boolean flag indicating whether the backend connection will be kept alive for client connection. If server_keep_alive is true, it means the backend connection will keep alive for the client connection. Every client connection is tied 1:1 with the corresponding server-side connection. If server_keep_alive is false, it means the backend connection won't keep alive for the client connection.
	ServerKeepAlive *bool `json:"serverKeepAlive,omitempty" tf:"server_keep_alive,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyLbHttpApplicationProfileTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// When X-Forwareded-For is configured, X-Forwarded-Proto and X-Forwarded-Port information is added automatically into request header
	XForwardedFor *string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for,omitempty"`
}

type PolicyLbHttpApplicationProfileParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// A URL that incoming requests for that virtual server can be temporarily redirected to, If a website is temporarily down or has moved
	// +kubebuilder:validation:Optional
	HTTPRedirectTo *string `json:"httpRedirectTo,omitempty" tf:"http_redirect_to,omitempty"`

	// A boolean flag which reflects whether the client will automatically be redirected to use SSL
	// +kubebuilder:validation:Optional
	HTTPRedirectToHTTPS *bool `json:"httpRedirectToHttps,omitempty" tf:"http_redirect_to_https,omitempty"`

	// Timeout in seconds to specify how long an HTTP application can remain idle
	// +kubebuilder:validation:Optional
	IdleTimeout *float64 `json:"idleTimeout,omitempty" tf:"idle_timeout,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Maximum request body size in bytes (Unlimited if not specified)
	// +kubebuilder:validation:Optional
	RequestBodySize *float64 `json:"requestBodySize,omitempty" tf:"request_body_size,omitempty"`

	// Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a request with header below this specified size is guaranteed to be processed
	// +kubebuilder:validation:Optional
	RequestHeaderSize *float64 `json:"requestHeaderSize,omitempty" tf:"request_header_size,omitempty"`

	// A boolean flag indicating whether the response received by LB from the backend will be saved into the buffers
	// +kubebuilder:validation:Optional
	ResponseBuffering *bool `json:"responseBuffering,omitempty" tf:"response_buffering,omitempty"`

	// Maximum request header size in bytes. Requests with larger header size will be processed as best effort whereas a request with header below this specified size is guaranteed to be processed
	// +kubebuilder:validation:Optional
	ResponseHeaderSize *float64 `json:"responseHeaderSize,omitempty" tf:"response_header_size,omitempty"`

	// Number of seconds waiting for the server response before the connection is closed
	// +kubebuilder:validation:Optional
	ResponseTimeout *float64 `json:"responseTimeout,omitempty" tf:"response_timeout,omitempty"`

	// A boolean flag indicating whether the backend connection will be kept alive for client connection. If server_keep_alive is true, it means the backend connection will keep alive for the client connection. Every client connection is tied 1:1 with the corresponding server-side connection. If server_keep_alive is false, it means the backend connection won't keep alive for the client connection.
	// +kubebuilder:validation:Optional
	ServerKeepAlive *bool `json:"serverKeepAlive,omitempty" tf:"server_keep_alive,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyLbHttpApplicationProfileTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// When X-Forwareded-For is configured, X-Forwarded-Proto and X-Forwarded-Port information is added automatically into request header
	// +kubebuilder:validation:Optional
	XForwardedFor *string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for,omitempty"`
}

type PolicyLbHttpApplicationProfileTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyLbHttpApplicationProfileTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyLbHttpApplicationProfileSpec defines the desired state of PolicyLbHttpApplicationProfile
type PolicyLbHttpApplicationProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyLbHttpApplicationProfileParameters `json:"forProvider"`
}

// PolicyLbHttpApplicationProfileStatus defines the observed state of PolicyLbHttpApplicationProfile.
type PolicyLbHttpApplicationProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyLbHttpApplicationProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbHttpApplicationProfile is the Schema for the PolicyLbHttpApplicationProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyLbHttpApplicationProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   PolicyLbHttpApplicationProfileSpec   `json:"spec"`
	Status PolicyLbHttpApplicationProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbHttpApplicationProfileList contains a list of PolicyLbHttpApplicationProfiles
type PolicyLbHttpApplicationProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyLbHttpApplicationProfile `json:"items"`
}

// Repository type metadata.
var (
	PolicyLbHttpApplicationProfile_Kind             = "PolicyLbHttpApplicationProfile"
	PolicyLbHttpApplicationProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyLbHttpApplicationProfile_Kind}.String()
	PolicyLbHttpApplicationProfile_KindAPIVersion   = PolicyLbHttpApplicationProfile_Kind + "." + CRDGroupVersion.String()
	PolicyLbHttpApplicationProfile_GroupVersionKind = CRDGroupVersion.WithKind(PolicyLbHttpApplicationProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyLbHttpApplicationProfile{}, &PolicyLbHttpApplicationProfileList{})
}
