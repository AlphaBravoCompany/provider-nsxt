/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyLbTcpMonitorProfileObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Number of consecutive checks that must fail before marking it down
	FallCount *float64 `json:"fallCount,omitempty" tf:"fall_count,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The frequency at which the system issues the monitor check (in seconds)
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not supported
	MonitorPort *float64 `json:"monitorPort,omitempty" tf:"monitor_port,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The expected data string to be received from the response, can be anywhere in the response
	Receive *string `json:"receive,omitempty" tf:"receive,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Number of consecutive checks that must pass before marking it up
	RiseCount *float64 `json:"riseCount,omitempty" tf:"rise_count,omitempty"`

	// The data to be sent to the monitored server.
	Send *string `json:"send,omitempty" tf:"send,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyLbTcpMonitorProfileTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// Number of seconds the target has to respond to the monitor request
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PolicyLbTcpMonitorProfileParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Number of consecutive checks that must fail before marking it down
	// +kubebuilder:validation:Optional
	FallCount *float64 `json:"fallCount,omitempty" tf:"fall_count,omitempty"`

	// The frequency at which the system issues the monitor check (in seconds)
	// +kubebuilder:validation:Optional
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// If the monitor port is specified, it would override pool member port setting for healthcheck. A port range is not supported
	// +kubebuilder:validation:Optional
	MonitorPort *float64 `json:"monitorPort,omitempty" tf:"monitor_port,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// The expected data string to be received from the response, can be anywhere in the response
	// +kubebuilder:validation:Optional
	Receive *string `json:"receive,omitempty" tf:"receive,omitempty"`

	// Number of consecutive checks that must pass before marking it up
	// +kubebuilder:validation:Optional
	RiseCount *float64 `json:"riseCount,omitempty" tf:"rise_count,omitempty"`

	// The data to be sent to the monitored server.
	// +kubebuilder:validation:Optional
	Send *string `json:"send,omitempty" tf:"send,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyLbTcpMonitorProfileTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// Number of seconds the target has to respond to the monitor request
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PolicyLbTcpMonitorProfileTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyLbTcpMonitorProfileTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyLbTcpMonitorProfileSpec defines the desired state of PolicyLbTcpMonitorProfile
type PolicyLbTcpMonitorProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyLbTcpMonitorProfileParameters `json:"forProvider"`
}

// PolicyLbTcpMonitorProfileStatus defines the observed state of PolicyLbTcpMonitorProfile.
type PolicyLbTcpMonitorProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyLbTcpMonitorProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbTcpMonitorProfile is the Schema for the PolicyLbTcpMonitorProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyLbTcpMonitorProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   PolicyLbTcpMonitorProfileSpec   `json:"spec"`
	Status PolicyLbTcpMonitorProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbTcpMonitorProfileList contains a list of PolicyLbTcpMonitorProfiles
type PolicyLbTcpMonitorProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyLbTcpMonitorProfile `json:"items"`
}

// Repository type metadata.
var (
	PolicyLbTcpMonitorProfile_Kind             = "PolicyLbTcpMonitorProfile"
	PolicyLbTcpMonitorProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyLbTcpMonitorProfile_Kind}.String()
	PolicyLbTcpMonitorProfile_KindAPIVersion   = PolicyLbTcpMonitorProfile_Kind + "." + CRDGroupVersion.String()
	PolicyLbTcpMonitorProfile_GroupVersionKind = CRDGroupVersion.WithKind(PolicyLbTcpMonitorProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyLbTcpMonitorProfile{}, &PolicyLbTcpMonitorProfileList{})
}
