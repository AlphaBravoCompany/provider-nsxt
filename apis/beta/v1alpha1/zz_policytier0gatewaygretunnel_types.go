/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyTier0GatewayGreTunnelObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Destination IPv4 address
	DestinationAddress *string `json:"destinationAddress,omitempty" tf:"destination_address,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Enable/Disable Tunnel
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Policy path of associated Gateway Locale Service on NSX
	LocaleServicePath *string `json:"localeServicePath,omitempty" tf:"locale_service_path,omitempty"`

	// Maximum transmission unit
	Mtu *float64 `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyTier0GatewayGreTunnelTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// Tunnel Address object parameter
	TunnelAddress []TunnelAddressObservation `json:"tunnelAddress,omitempty" tf:"tunnel_address,omitempty"`

	// tunnel keep alive object
	TunnelKeepalive []TunnelKeepaliveObservation `json:"tunnelKeepalive,omitempty" tf:"tunnel_keepalive,omitempty"`
}

type PolicyTier0GatewayGreTunnelParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Destination IPv4 address
	// +kubebuilder:validation:Optional
	DestinationAddress *string `json:"destinationAddress,omitempty" tf:"destination_address,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Enable/Disable Tunnel
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Policy path of associated Gateway Locale Service on NSX
	// +kubebuilder:validation:Optional
	LocaleServicePath *string `json:"localeServicePath,omitempty" tf:"locale_service_path,omitempty"`

	// Maximum transmission unit
	// +kubebuilder:validation:Optional
	Mtu *float64 `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyTier0GatewayGreTunnelTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// Tunnel Address object parameter
	// +kubebuilder:validation:Optional
	TunnelAddress []TunnelAddressParameters `json:"tunnelAddress,omitempty" tf:"tunnel_address,omitempty"`

	// tunnel keep alive object
	// +kubebuilder:validation:Optional
	TunnelKeepalive []TunnelKeepaliveParameters `json:"tunnelKeepalive,omitempty" tf:"tunnel_keepalive,omitempty"`
}

type PolicyTier0GatewayGreTunnelTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyTier0GatewayGreTunnelTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type TunnelAddressObservation struct {

	// Policy edge node path
	EdgePath *string `json:"edgePath,omitempty" tf:"edge_path,omitempty"`

	// IPv4 source address
	SourceAddress *string `json:"sourceAddress,omitempty" tf:"source_address,omitempty"`

	// Interface Subnet object parameter
	TunnelInterfaceSubnet []TunnelInterfaceSubnetObservation `json:"tunnelInterfaceSubnet,omitempty" tf:"tunnel_interface_subnet,omitempty"`
}

type TunnelAddressParameters struct {

	// Policy edge node path
	// +kubebuilder:validation:Required
	EdgePath *string `json:"edgePath" tf:"edge_path,omitempty"`

	// IPv4 source address
	// +kubebuilder:validation:Required
	SourceAddress *string `json:"sourceAddress" tf:"source_address,omitempty"`

	// Interface Subnet object parameter
	// +kubebuilder:validation:Required
	TunnelInterfaceSubnet []TunnelInterfaceSubnetParameters `json:"tunnelInterfaceSubnet" tf:"tunnel_interface_subnet,omitempty"`
}

type TunnelInterfaceSubnetObservation struct {

	// IP addresses assigned to interface
	IPAddresses []*string `json:"ipAddresses,omitempty" tf:"ip_addresses,omitempty"`

	// Subnet prefix length
	PrefixLen *float64 `json:"prefixLen,omitempty" tf:"prefix_len,omitempty"`
}

type TunnelInterfaceSubnetParameters struct {

	// IP addresses assigned to interface
	// +kubebuilder:validation:Required
	IPAddresses []*string `json:"ipAddresses" tf:"ip_addresses,omitempty"`

	// Subnet prefix length
	// +kubebuilder:validation:Required
	PrefixLen *float64 `json:"prefixLen" tf:"prefix_len,omitempty"`
}

type TunnelKeepaliveObservation struct {

	// Dead time multiplier
	DeadTimeMultiplier *float64 `json:"deadTimeMultiplier,omitempty" tf:"dead_time_multiplier,omitempty"`

	// Enable tunnel keep alive acknowledge
	EnableKeepaliveAck *bool `json:"enableKeepaliveAck,omitempty" tf:"enable_keepalive_ack,omitempty"`

	// Enable/Disable tunnel keep alive
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Keep alive interval
	KeepaliveInterval *float64 `json:"keepaliveInterval,omitempty" tf:"keepalive_interval,omitempty"`
}

type TunnelKeepaliveParameters struct {

	// Dead time multiplier
	// +kubebuilder:validation:Optional
	DeadTimeMultiplier *float64 `json:"deadTimeMultiplier,omitempty" tf:"dead_time_multiplier,omitempty"`

	// Enable tunnel keep alive acknowledge
	// +kubebuilder:validation:Optional
	EnableKeepaliveAck *bool `json:"enableKeepaliveAck,omitempty" tf:"enable_keepalive_ack,omitempty"`

	// Enable/Disable tunnel keep alive
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Keep alive interval
	// +kubebuilder:validation:Optional
	KeepaliveInterval *float64 `json:"keepaliveInterval,omitempty" tf:"keepalive_interval,omitempty"`
}

// PolicyTier0GatewayGreTunnelSpec defines the desired state of PolicyTier0GatewayGreTunnel
type PolicyTier0GatewayGreTunnelSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyTier0GatewayGreTunnelParameters `json:"forProvider"`
}

// PolicyTier0GatewayGreTunnelStatus defines the observed state of PolicyTier0GatewayGreTunnel.
type PolicyTier0GatewayGreTunnelStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyTier0GatewayGreTunnelObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyTier0GatewayGreTunnel is the Schema for the PolicyTier0GatewayGreTunnels API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyTier0GatewayGreTunnel struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.destinationAddress)",message="destinationAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.localeServicePath)",message="localeServicePath is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.tunnelAddress)",message="tunnelAddress is a required parameter"
	Spec   PolicyTier0GatewayGreTunnelSpec   `json:"spec"`
	Status PolicyTier0GatewayGreTunnelStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyTier0GatewayGreTunnelList contains a list of PolicyTier0GatewayGreTunnels
type PolicyTier0GatewayGreTunnelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyTier0GatewayGreTunnel `json:"items"`
}

// Repository type metadata.
var (
	PolicyTier0GatewayGreTunnel_Kind             = "PolicyTier0GatewayGreTunnel"
	PolicyTier0GatewayGreTunnel_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyTier0GatewayGreTunnel_Kind}.String()
	PolicyTier0GatewayGreTunnel_KindAPIVersion   = PolicyTier0GatewayGreTunnel_Kind + "." + CRDGroupVersion.String()
	PolicyTier0GatewayGreTunnel_GroupVersionKind = CRDGroupVersion.WithKind(PolicyTier0GatewayGreTunnel_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyTier0GatewayGreTunnel{}, &PolicyTier0GatewayGreTunnelList{})
}
