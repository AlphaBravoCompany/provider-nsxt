/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AppIDObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether the app_id value is ALG type or not
	IsAlgType *bool `json:"isAlgType,omitempty" tf:"is_alg_type,omitempty"`

	SubAttribute []SubAttributeObservation `json:"subAttribute,omitempty" tf:"sub_attribute,omitempty"`

	// Values for attribute key
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type AppIDParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	SubAttribute []SubAttributeParameters `json:"subAttribute,omitempty" tf:"sub_attribute,omitempty"`

	// Values for attribute key
	// +kubebuilder:validation:Required
	Value []*string `json:"value" tf:"value,omitempty"`
}

type ContextObservation struct {

	// Id of the project which the resource belongs to.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type ContextParameters struct {

	// Id of the project which the resource belongs to.
	// +kubebuilder:validation:Required
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`
}

type CustomURLObservation struct {

	// True value for this flag will be treated as a partial match for custom url
	CustomURLPartialMatch *bool `json:"customUrlPartialMatch,omitempty" tf:"custom_url_partial_match,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type CustomURLParameters struct {

	// True value for this flag will be treated as a partial match for custom url
	// +kubebuilder:validation:Optional
	CustomURLPartialMatch *bool `json:"customUrlPartialMatch,omitempty" tf:"custom_url_partial_match,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	// +kubebuilder:validation:Required
	Value []*string `json:"value" tf:"value,omitempty"`
}

type DomainNameObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type DomainNameParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	// +kubebuilder:validation:Required
	Value []*string `json:"value" tf:"value,omitempty"`
}

type PolicyContextProfileObservation struct {
	AppID []AppIDObservation `json:"appId,omitempty" tf:"app_id,omitempty"`

	// Resource context
	Context []ContextObservation `json:"context,omitempty" tf:"context,omitempty"`

	CustomURL []CustomURLObservation `json:"customUrl,omitempty" tf:"custom_url,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	DomainName []DomainNameObservation `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []TagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	URLCategory []URLCategoryObservation `json:"urlCategory,omitempty" tf:"url_category,omitempty"`
}

type PolicyContextProfileParameters struct {

	// +kubebuilder:validation:Optional
	AppID []AppIDParameters `json:"appId,omitempty" tf:"app_id,omitempty"`

	// Resource context
	// +kubebuilder:validation:Optional
	Context []ContextParameters `json:"context,omitempty" tf:"context,omitempty"`

	// +kubebuilder:validation:Optional
	CustomURL []CustomURLParameters `json:"customUrl,omitempty" tf:"custom_url,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Optional
	DomainName []DomainNameParameters `json:"domainName,omitempty" tf:"domain_name,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []TagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// +kubebuilder:validation:Optional
	URLCategory []URLCategoryParameters `json:"urlCategory,omitempty" tf:"url_category,omitempty"`
}

type SubAttributeObservation struct {

	// Values for sub attribute key cifs_smb_version
	CifsSMBVersion []*string `json:"cifsSmbVersion,omitempty" tf:"cifs_smb_version,omitempty"`

	// Values for sub attribute key tls_cipher_suite
	TLSCipherSuite []*string `json:"tlsCipherSuite,omitempty" tf:"tls_cipher_suite,omitempty"`

	// Values for sub attribute key tls_version
	TLSVersion []*string `json:"tlsVersion,omitempty" tf:"tls_version,omitempty"`
}

type SubAttributeParameters struct {

	// Values for sub attribute key cifs_smb_version
	// +kubebuilder:validation:Optional
	CifsSMBVersion []*string `json:"cifsSmbVersion,omitempty" tf:"cifs_smb_version,omitempty"`

	// Values for sub attribute key tls_cipher_suite
	// +kubebuilder:validation:Optional
	TLSCipherSuite []*string `json:"tlsCipherSuite,omitempty" tf:"tls_cipher_suite,omitempty"`

	// Values for sub attribute key tls_version
	// +kubebuilder:validation:Optional
	TLSVersion []*string `json:"tlsVersion,omitempty" tf:"tls_version,omitempty"`
}

type TagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type TagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type URLCategoryObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type URLCategoryParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Values for attribute key
	// +kubebuilder:validation:Required
	Value []*string `json:"value" tf:"value,omitempty"`
}

// PolicyContextProfileSpec defines the desired state of PolicyContextProfile
type PolicyContextProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyContextProfileParameters `json:"forProvider"`
}

// PolicyContextProfileStatus defines the observed state of PolicyContextProfile.
type PolicyContextProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyContextProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyContextProfile is the Schema for the PolicyContextProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyContextProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   PolicyContextProfileSpec   `json:"spec"`
	Status PolicyContextProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyContextProfileList contains a list of PolicyContextProfiles
type PolicyContextProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyContextProfile `json:"items"`
}

// Repository type metadata.
var (
	PolicyContextProfile_Kind             = "PolicyContextProfile"
	PolicyContextProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyContextProfile_Kind}.String()
	PolicyContextProfile_KindAPIVersion   = PolicyContextProfile_Kind + "." + CRDGroupVersion.String()
	PolicyContextProfile_GroupVersionKind = CRDGroupVersion.WithKind(PolicyContextProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyContextProfile{}, &PolicyContextProfileList{})
}
