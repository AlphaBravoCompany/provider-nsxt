/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/AlphaBravoCompany/provider-nsxt/apis/beta/v1alpha1"
	v1alpha1deprecated "github.com/AlphaBravoCompany/provider-nsxt/apis/deprecated/v1alpha1"
	v1alpha1dhcp "github.com/AlphaBravoCompany/provider-nsxt/apis/dhcp/v1alpha1"
	v1alpha1dns "github.com/AlphaBravoCompany/provider-nsxt/apis/dns/v1alpha1"
	v1alpha1evpn "github.com/AlphaBravoCompany/provider-nsxt/apis/evpn/v1alpha1"
	v1alpha1fabric "github.com/AlphaBravoCompany/provider-nsxt/apis/fabric/v1alpha1"
	v1alpha1firewall "github.com/AlphaBravoCompany/provider-nsxt/apis/firewall/v1alpha1"
	v1alpha1gatewaysandrouting "github.com/AlphaBravoCompany/provider-nsxt/apis/gatewaysandrouting/v1alpha1"
	v1alpha1groupingandtagging "github.com/AlphaBravoCompany/provider-nsxt/apis/groupingandtagging/v1alpha1"
	v1alpha1ipam "github.com/AlphaBravoCompany/provider-nsxt/apis/ipam/v1alpha1"
	v1alpha1loadbalancer "github.com/AlphaBravoCompany/provider-nsxt/apis/loadbalancer/v1alpha1"
	v1alpha1multitenancy "github.com/AlphaBravoCompany/provider-nsxt/apis/multitenancy/v1alpha1"
	v1alpha1segments "github.com/AlphaBravoCompany/provider-nsxt/apis/segments/v1alpha1"
	v1alpha1apis "github.com/AlphaBravoCompany/provider-nsxt/apis/v1alpha1"
	v1beta1 "github.com/AlphaBravoCompany/provider-nsxt/apis/v1beta1"
	v1alpha1vpn "github.com/AlphaBravoCompany/provider-nsxt/apis/vpn/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1deprecated.SchemeBuilder.AddToScheme,
		v1alpha1dhcp.SchemeBuilder.AddToScheme,
		v1alpha1dns.SchemeBuilder.AddToScheme,
		v1alpha1evpn.SchemeBuilder.AddToScheme,
		v1alpha1fabric.SchemeBuilder.AddToScheme,
		v1alpha1firewall.SchemeBuilder.AddToScheme,
		v1alpha1gatewaysandrouting.SchemeBuilder.AddToScheme,
		v1alpha1groupingandtagging.SchemeBuilder.AddToScheme,
		v1alpha1ipam.SchemeBuilder.AddToScheme,
		v1alpha1loadbalancer.SchemeBuilder.AddToScheme,
		v1alpha1multitenancy.SchemeBuilder.AddToScheme,
		v1alpha1segments.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1vpn.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
