/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EdgeHighAvailabilityProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EdgeHighAvailabilityProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EdgeHighAvailabilityProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EdgeHighAvailabilityProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this EdgeHighAvailabilityProfile.
func (mg *EdgeHighAvailabilityProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this EdgeTransportNode.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *EdgeTransportNode) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this EdgeTransportNode.
func (mg *EdgeTransportNode) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this EdgeTransportNode.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *EdgeTransportNode) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this EdgeTransportNode.
func (mg *EdgeTransportNode) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyComputeSubCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyComputeSubCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyComputeSubCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyComputeSubCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyComputeSubCluster.
func (mg *PolicyComputeSubCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyHostTransportNode.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyHostTransportNode) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyHostTransportNode.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyHostTransportNode) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyHostTransportNode.
func (mg *PolicyHostTransportNode) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyHostTransportNodeCollection.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyHostTransportNodeCollection) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyHostTransportNodeCollection.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyHostTransportNodeCollection) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyHostTransportNodeCollection.
func (mg *PolicyHostTransportNodeCollection) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyUplinkHostSwitchProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyUplinkHostSwitchProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyUplinkHostSwitchProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyUplinkHostSwitchProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyUplinkHostSwitchProfile.
func (mg *PolicyUplinkHostSwitchProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicy of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetManagementPolicy() xpv1.ManagementPolicy {
	return mg.Spec.ManagementPolicy
}

// GetProviderConfigReference of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PolicyVtepHaHostSwitchProfile.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PolicyVtepHaHostSwitchProfile) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicy of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetManagementPolicy(r xpv1.ManagementPolicy) {
	mg.Spec.ManagementPolicy = r
}

// SetProviderConfigReference of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PolicyVtepHaHostSwitchProfile.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PolicyVtepHaHostSwitchProfile) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PolicyVtepHaHostSwitchProfile.
func (mg *PolicyVtepHaHostSwitchProfile) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
