/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BfdConfigObservation struct {

	// Flag to enable/disable BFD configuration
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Time interval between heartbeat packets in milliseconds
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// Number of times heartbeat packet is missed before BFD declares the neighbor is down
	Multiple *float64 `json:"multiple,omitempty" tf:"multiple,omitempty"`
}

type BfdConfigParameters struct {

	// Flag to enable/disable BFD configuration
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Time interval between heartbeat packets in milliseconds
	// +kubebuilder:validation:Optional
	Interval *float64 `json:"interval,omitempty" tf:"interval,omitempty"`

	// Number of times heartbeat packet is missed before BFD declares the neighbor is down
	// +kubebuilder:validation:Optional
	Multiple *float64 `json:"multiple,omitempty" tf:"multiple,omitempty"`
}

type PolicyBgpMeighborObservation struct {

	// Flag to enable allowas_in option for BGP neighbor
	AllowAsIn *bool `json:"allowAsIn,omitempty" tf:"allow_as_in,omitempty"`

	// Policy path to the BGP for this neighbor
	BGPPath *string `json:"bgpPath,omitempty" tf:"bgp_path,omitempty"`

	// BFD configuration for failure detection
	BfdConfig []BfdConfigObservation `json:"bfdConfig,omitempty" tf:"bfd_config,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// BGP Graceful Restart Configuration Mode
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Wait time in seconds before declaring peer dead
	HoldDownTime *float64 `json:"holdDownTime,omitempty" tf:"hold_down_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Interval between keep alive messages sent to peer
	KeepAliveTime *float64 `json:"keepAliveTime,omitempty" tf:"keep_alive_time,omitempty"`

	// Maximum number of hops allowed to reach BGP neighbor
	MaximumHopLimit *float64 `json:"maximumHopLimit,omitempty" tf:"maximum_hop_limit,omitempty"`

	// Neighbor IP Address
	NeighborAddress *string `json:"neighborAddress,omitempty" tf:"neighbor_address,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// ASN of the neighbor in ASPLAIN or ASDOT Format
	RemoteAsNum *string `json:"remoteAsNum,omitempty" tf:"remote_as_num,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Enable address families and route filtering in each direction
	RouteFiltering []RouteFilteringObservation `json:"routeFiltering,omitempty" tf:"route_filtering,omitempty"`

	// Source IP Addresses for BGP peering
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyBgpMeighborTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyBgpMeighborParameters struct {

	// Flag to enable allowas_in option for BGP neighbor
	// +kubebuilder:validation:Optional
	AllowAsIn *bool `json:"allowAsIn,omitempty" tf:"allow_as_in,omitempty"`

	// Policy path to the BGP for this neighbor
	// +kubebuilder:validation:Optional
	BGPPath *string `json:"bgpPath,omitempty" tf:"bgp_path,omitempty"`

	// BFD configuration for failure detection
	// +kubebuilder:validation:Optional
	BfdConfig []BfdConfigParameters `json:"bfdConfig,omitempty" tf:"bfd_config,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// BGP Graceful Restart Configuration Mode
	// +kubebuilder:validation:Optional
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Wait time in seconds before declaring peer dead
	// +kubebuilder:validation:Optional
	HoldDownTime *float64 `json:"holdDownTime,omitempty" tf:"hold_down_time,omitempty"`

	// Interval between keep alive messages sent to peer
	// +kubebuilder:validation:Optional
	KeepAliveTime *float64 `json:"keepAliveTime,omitempty" tf:"keep_alive_time,omitempty"`

	// Maximum number of hops allowed to reach BGP neighbor
	// +kubebuilder:validation:Optional
	MaximumHopLimit *float64 `json:"maximumHopLimit,omitempty" tf:"maximum_hop_limit,omitempty"`

	// Neighbor IP Address
	// +kubebuilder:validation:Optional
	NeighborAddress *string `json:"neighborAddress,omitempty" tf:"neighbor_address,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Password for BGP neighbor authentication
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// ASN of the neighbor in ASPLAIN or ASDOT Format
	// +kubebuilder:validation:Optional
	RemoteAsNum *string `json:"remoteAsNum,omitempty" tf:"remote_as_num,omitempty"`

	// Enable address families and route filtering in each direction
	// +kubebuilder:validation:Optional
	RouteFiltering []RouteFilteringParameters `json:"routeFiltering,omitempty" tf:"route_filtering,omitempty"`

	// Source IP Addresses for BGP peering
	// +kubebuilder:validation:Optional
	SourceAddresses []*string `json:"sourceAddresses,omitempty" tf:"source_addresses,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyBgpMeighborTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyBgpMeighborTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyBgpMeighborTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type RouteFilteringObservation struct {

	// Address family type
	AddressFamily *string `json:"addressFamily,omitempty" tf:"address_family,omitempty"`

	// Flag to enable/disable address family
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Prefix-list or route map path for IN direction
	InRouteFilter *string `json:"inRouteFilter,omitempty" tf:"in_route_filter,omitempty"`

	// Maximum number of routes for the address family
	MaximumRoutes *float64 `json:"maximumRoutes,omitempty" tf:"maximum_routes,omitempty"`

	// Prefix-list or route map path for OUT direction
	OutRouteFilter *string `json:"outRouteFilter,omitempty" tf:"out_route_filter,omitempty"`
}

type RouteFilteringParameters struct {

	// Address family type
	// +kubebuilder:validation:Required
	AddressFamily *string `json:"addressFamily" tf:"address_family,omitempty"`

	// Flag to enable/disable address family
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Prefix-list or route map path for IN direction
	// +kubebuilder:validation:Optional
	InRouteFilter *string `json:"inRouteFilter,omitempty" tf:"in_route_filter,omitempty"`

	// Maximum number of routes for the address family
	// +kubebuilder:validation:Optional
	MaximumRoutes *float64 `json:"maximumRoutes,omitempty" tf:"maximum_routes,omitempty"`

	// Prefix-list or route map path for OUT direction
	// +kubebuilder:validation:Optional
	OutRouteFilter *string `json:"outRouteFilter,omitempty" tf:"out_route_filter,omitempty"`
}

// PolicyBgpMeighborSpec defines the desired state of PolicyBgpMeighbor
type PolicyBgpMeighborSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyBgpMeighborParameters `json:"forProvider"`
}

// PolicyBgpMeighborStatus defines the observed state of PolicyBgpMeighbor.
type PolicyBgpMeighborStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyBgpMeighborObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyBgpMeighbor is the Schema for the PolicyBgpMeighbors API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyBgpMeighbor struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.bgpPath)",message="bgpPath is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.neighborAddress)",message="neighborAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.remoteAsNum)",message="remoteAsNum is a required parameter"
	Spec   PolicyBgpMeighborSpec   `json:"spec"`
	Status PolicyBgpMeighborStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyBgpMeighborList contains a list of PolicyBgpMeighbors
type PolicyBgpMeighborList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyBgpMeighbor `json:"items"`
}

// Repository type metadata.
var (
	PolicyBgpMeighbor_Kind             = "PolicyBgpMeighbor"
	PolicyBgpMeighbor_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyBgpMeighbor_Kind}.String()
	PolicyBgpMeighbor_KindAPIVersion   = PolicyBgpMeighbor_Kind + "." + CRDGroupVersion.String()
	PolicyBgpMeighbor_GroupVersionKind = CRDGroupVersion.WithKind(PolicyBgpMeighbor_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyBgpMeighbor{}, &PolicyBgpMeighborList{})
}
