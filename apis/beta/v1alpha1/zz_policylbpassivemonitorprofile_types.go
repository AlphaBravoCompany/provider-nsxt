/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyLbPassiveMonitorProfileObservation struct {

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Number of consecutive failures before a member is considered temporarily unavailable
	MaxFails *float64 `json:"maxFails,omitempty" tf:"max_fails,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyLbPassiveMonitorProfileTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	// Number of seconds the target has to respond to the monitor request
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PolicyLbPassiveMonitorProfileParameters struct {

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Number of consecutive failures before a member is considered temporarily unavailable
	// +kubebuilder:validation:Optional
	MaxFails *float64 `json:"maxFails,omitempty" tf:"max_fails,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyLbPassiveMonitorProfileTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// Number of seconds the target has to respond to the monitor request
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PolicyLbPassiveMonitorProfileTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyLbPassiveMonitorProfileTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyLbPassiveMonitorProfileSpec defines the desired state of PolicyLbPassiveMonitorProfile
type PolicyLbPassiveMonitorProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyLbPassiveMonitorProfileParameters `json:"forProvider"`
}

// PolicyLbPassiveMonitorProfileStatus defines the observed state of PolicyLbPassiveMonitorProfile.
type PolicyLbPassiveMonitorProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyLbPassiveMonitorProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbPassiveMonitorProfile is the Schema for the PolicyLbPassiveMonitorProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyLbPassiveMonitorProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   PolicyLbPassiveMonitorProfileSpec   `json:"spec"`
	Status PolicyLbPassiveMonitorProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyLbPassiveMonitorProfileList contains a list of PolicyLbPassiveMonitorProfiles
type PolicyLbPassiveMonitorProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyLbPassiveMonitorProfile `json:"items"`
}

// Repository type metadata.
var (
	PolicyLbPassiveMonitorProfile_Kind             = "PolicyLbPassiveMonitorProfile"
	PolicyLbPassiveMonitorProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyLbPassiveMonitorProfile_Kind}.String()
	PolicyLbPassiveMonitorProfile_KindAPIVersion   = PolicyLbPassiveMonitorProfile_Kind + "." + CRDGroupVersion.String()
	PolicyLbPassiveMonitorProfile_GroupVersionKind = CRDGroupVersion.WithKind(PolicyLbPassiveMonitorProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyLbPassiveMonitorProfile{}, &PolicyLbPassiveMonitorProfileList{})
}
