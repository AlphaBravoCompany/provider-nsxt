/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyMacDiscoveryProfileContextObservation struct {

	// Id of the project which the resource belongs to.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type PolicyMacDiscoveryProfileContextParameters struct {

	// Id of the project which the resource belongs to.
	// +kubebuilder:validation:Required
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`
}

type PolicyMacDiscoveryProfileObservation struct {

	// Resource context
	Context []PolicyMacDiscoveryProfileContextObservation `json:"context,omitempty" tf:"context,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	MacChangeEnabled *bool `json:"macChangeEnabled,omitempty" tf:"mac_change_enabled,omitempty"`

	MacLearningEnabled *bool `json:"macLearningEnabled,omitempty" tf:"mac_learning_enabled,omitempty"`

	MacLimit *float64 `json:"macLimit,omitempty" tf:"mac_limit,omitempty"`

	MacLimitPolicy *string `json:"macLimitPolicy,omitempty" tf:"mac_limit_policy,omitempty"`

	// NSX ID for this resource
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// Policy path for this resource
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	RemoteOverlayMacLimit *float64 `json:"remoteOverlayMacLimit,omitempty" tf:"remote_overlay_mac_limit,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []PolicyMacDiscoveryProfileTagObservation `json:"tag,omitempty" tf:"tag,omitempty"`

	UnknownUnicastFloodingEnabled *bool `json:"unknownUnicastFloodingEnabled,omitempty" tf:"unknown_unicast_flooding_enabled,omitempty"`
}

type PolicyMacDiscoveryProfileParameters struct {

	// Resource context
	// +kubebuilder:validation:Optional
	Context []PolicyMacDiscoveryProfileContextParameters `json:"context,omitempty" tf:"context,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Optional
	MacChangeEnabled *bool `json:"macChangeEnabled,omitempty" tf:"mac_change_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	MacLearningEnabled *bool `json:"macLearningEnabled,omitempty" tf:"mac_learning_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	MacLimit *float64 `json:"macLimit,omitempty" tf:"mac_limit,omitempty"`

	// +kubebuilder:validation:Optional
	MacLimitPolicy *string `json:"macLimitPolicy,omitempty" tf:"mac_limit_policy,omitempty"`

	// NSX ID for this resource
	// +kubebuilder:validation:Optional
	NsxID *string `json:"nsxId,omitempty" tf:"nsx_id,omitempty"`

	// +kubebuilder:validation:Optional
	RemoteOverlayMacLimit *float64 `json:"remoteOverlayMacLimit,omitempty" tf:"remote_overlay_mac_limit,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []PolicyMacDiscoveryProfileTagParameters `json:"tag,omitempty" tf:"tag,omitempty"`

	// +kubebuilder:validation:Optional
	UnknownUnicastFloodingEnabled *bool `json:"unknownUnicastFloodingEnabled,omitempty" tf:"unknown_unicast_flooding_enabled,omitempty"`
}

type PolicyMacDiscoveryProfileTagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type PolicyMacDiscoveryProfileTagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// PolicyMacDiscoveryProfileSpec defines the desired state of PolicyMacDiscoveryProfile
type PolicyMacDiscoveryProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyMacDiscoveryProfileParameters `json:"forProvider"`
}

// PolicyMacDiscoveryProfileStatus defines the observed state of PolicyMacDiscoveryProfile.
type PolicyMacDiscoveryProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyMacDiscoveryProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyMacDiscoveryProfile is the Schema for the PolicyMacDiscoveryProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyMacDiscoveryProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   PolicyMacDiscoveryProfileSpec   `json:"spec"`
	Status PolicyMacDiscoveryProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyMacDiscoveryProfileList contains a list of PolicyMacDiscoveryProfiles
type PolicyMacDiscoveryProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyMacDiscoveryProfile `json:"items"`
}

// Repository type metadata.
var (
	PolicyMacDiscoveryProfile_Kind             = "PolicyMacDiscoveryProfile"
	PolicyMacDiscoveryProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyMacDiscoveryProfile_Kind}.String()
	PolicyMacDiscoveryProfile_KindAPIVersion   = PolicyMacDiscoveryProfile_Kind + "." + CRDGroupVersion.String()
	PolicyMacDiscoveryProfile_GroupVersionKind = CRDGroupVersion.WithKind(PolicyMacDiscoveryProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyMacDiscoveryProfile{}, &PolicyMacDiscoveryProfileList{})
}
