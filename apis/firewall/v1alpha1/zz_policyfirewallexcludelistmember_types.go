/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyFirewallExcludeListMemberObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ExcludeList member
	Member *string `json:"member,omitempty" tf:"member,omitempty"`
}

type PolicyFirewallExcludeListMemberParameters struct {

	// ExcludeList member
	// +kubebuilder:validation:Optional
	Member *string `json:"member,omitempty" tf:"member,omitempty"`
}

// PolicyFirewallExcludeListMemberSpec defines the desired state of PolicyFirewallExcludeListMember
type PolicyFirewallExcludeListMemberSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyFirewallExcludeListMemberParameters `json:"forProvider"`
}

// PolicyFirewallExcludeListMemberStatus defines the observed state of PolicyFirewallExcludeListMember.
type PolicyFirewallExcludeListMemberStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyFirewallExcludeListMemberObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyFirewallExcludeListMember is the Schema for the PolicyFirewallExcludeListMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type PolicyFirewallExcludeListMember struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.member)",message="member is a required parameter"
	Spec   PolicyFirewallExcludeListMemberSpec   `json:"spec"`
	Status PolicyFirewallExcludeListMemberStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyFirewallExcludeListMemberList contains a list of PolicyFirewallExcludeListMembers
type PolicyFirewallExcludeListMemberList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyFirewallExcludeListMember `json:"items"`
}

// Repository type metadata.
var (
	PolicyFirewallExcludeListMember_Kind             = "PolicyFirewallExcludeListMember"
	PolicyFirewallExcludeListMember_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyFirewallExcludeListMember_Kind}.String()
	PolicyFirewallExcludeListMember_KindAPIVersion   = PolicyFirewallExcludeListMember_Kind + "." + CRDGroupVersion.String()
	PolicyFirewallExcludeListMember_GroupVersionKind = CRDGroupVersion.WithKind(PolicyFirewallExcludeListMember_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyFirewallExcludeListMember{}, &PolicyFirewallExcludeListMemberList{})
}
