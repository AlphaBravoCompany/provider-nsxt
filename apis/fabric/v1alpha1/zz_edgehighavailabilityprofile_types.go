/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EdgeHighAvailabilityProfileObservation struct {

	// BFD allowed hops
	BfdAllowedHops *float64 `json:"bfdAllowedHops,omitempty" tf:"bfd_allowed_hops,omitempty"`

	// Number of times a packet is missed before BFD declares the neighbor down
	BfdDeclareDeadMultiple *float64 `json:"bfdDeclareDeadMultiple,omitempty" tf:"bfd_declare_dead_multiple,omitempty"`

	// the time interval (in millisecond) between probe packets for heartbeat purpose
	BfdProbeInterval *float64 `json:"bfdProbeInterval,omitempty" tf:"bfd_probe_interval,omitempty"`

	// Description for this resource
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	// Standby service context relocation wait time
	StandbyRelocationThreshold *float64 `json:"standbyRelocationThreshold,omitempty" tf:"standby_relocation_threshold,omitempty"`

	// Set of opaque identifiers meaningful to the user
	Tag []TagObservation `json:"tag,omitempty" tf:"tag,omitempty"`
}

type EdgeHighAvailabilityProfileParameters struct {

	// BFD allowed hops
	// +kubebuilder:validation:Optional
	BfdAllowedHops *float64 `json:"bfdAllowedHops,omitempty" tf:"bfd_allowed_hops,omitempty"`

	// Number of times a packet is missed before BFD declares the neighbor down
	// +kubebuilder:validation:Optional
	BfdDeclareDeadMultiple *float64 `json:"bfdDeclareDeadMultiple,omitempty" tf:"bfd_declare_dead_multiple,omitempty"`

	// the time interval (in millisecond) between probe packets for heartbeat purpose
	// +kubebuilder:validation:Optional
	BfdProbeInterval *float64 `json:"bfdProbeInterval,omitempty" tf:"bfd_probe_interval,omitempty"`

	// Description for this resource
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Display name for this resource
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Standby service context relocation wait time
	// +kubebuilder:validation:Optional
	StandbyRelocationThreshold *float64 `json:"standbyRelocationThreshold,omitempty" tf:"standby_relocation_threshold,omitempty"`

	// Set of opaque identifiers meaningful to the user
	// +kubebuilder:validation:Optional
	Tag []TagParameters `json:"tag,omitempty" tf:"tag,omitempty"`
}

type TagObservation struct {
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

type TagParameters struct {

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// +kubebuilder:validation:Optional
	Tag *string `json:"tag,omitempty" tf:"tag,omitempty"`
}

// EdgeHighAvailabilityProfileSpec defines the desired state of EdgeHighAvailabilityProfile
type EdgeHighAvailabilityProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EdgeHighAvailabilityProfileParameters `json:"forProvider"`
}

// EdgeHighAvailabilityProfileStatus defines the observed state of EdgeHighAvailabilityProfile.
type EdgeHighAvailabilityProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EdgeHighAvailabilityProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EdgeHighAvailabilityProfile is the Schema for the EdgeHighAvailabilityProfiles API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,nsxt}
type EdgeHighAvailabilityProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	Spec   EdgeHighAvailabilityProfileSpec   `json:"spec"`
	Status EdgeHighAvailabilityProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EdgeHighAvailabilityProfileList contains a list of EdgeHighAvailabilityProfiles
type EdgeHighAvailabilityProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EdgeHighAvailabilityProfile `json:"items"`
}

// Repository type metadata.
var (
	EdgeHighAvailabilityProfile_Kind             = "EdgeHighAvailabilityProfile"
	EdgeHighAvailabilityProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EdgeHighAvailabilityProfile_Kind}.String()
	EdgeHighAvailabilityProfile_KindAPIVersion   = EdgeHighAvailabilityProfile_Kind + "." + CRDGroupVersion.String()
	EdgeHighAvailabilityProfile_GroupVersionKind = CRDGroupVersion.WithKind(EdgeHighAvailabilityProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&EdgeHighAvailabilityProfile{}, &EdgeHighAvailabilityProfileList{})
}
